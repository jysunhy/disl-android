!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ANALYSIS_COUNT	dislreagent.cpp	72;"	d	file:
APP_STL	Android.mk	/^APP_STL := stlport_static$/;"	m
APP_STL	Application.mk	/^APP_STL := stlport_static$/;"	m
Agent_OnLoad	dislreagent.cpp	/^JNIEXPORT jint JNICALL Agent_OnLoad(JavaVM *jvm, char *options, void *reserved) {$/;"	f
BQ_BUFFERS	dislreagent.cpp	69;"	d	file:
BQ_UTILITY	dislreagent.cpp	63;"	d	file:
CLASS_ID_MASK	netref.h	/^static const uint64_t CLASS_ID_MASK = 0x3FFFFF;$/;"	v
CLASS_ID_POS	netref.h	/^static const uint8_t CLASS_ID_POS = 40;$/;"	v
CLASS_INSTANCE_MASK	netref.h	/^static const uint64_t CLASS_INSTANCE_MASK = 0x1;$/;"	v
CLASS_INSTANCE_POS	netref.h	/^static const uint8_t CLASS_INSTANCE_POS = 62;$/;"	v
DEFAULT_HOST	dislreagent.cpp	/^static const char * DEFAULT_HOST = "localhost";$/;"	v	file:
DEFAULT_PORT	dislreagent.cpp	/^static const char * DEFAULT_PORT = "11218";$/;"	v	file:
ERR	asserter.h	15;"	d
ERR_PREFIX	dislreagent.cpp	15;"	d	file:
ERR_PREFIX	long.cpp	2;"	d	file:
ERR_SERVER	dislreagent.cpp	/^static const int ERR_SERVER = 10003;$/;"	v	file:
ERR_STD	asserter.h	16;"	d
FALSE	asserter.h	12;"	d
INIT_BUFF_SIZE	buffer.h	/^static const size_t INIT_BUFF_SIZE = 512;$/;"	v
INVALID_BUFF_ID	dislreagent.cpp	110;"	d	file:
INVALID_THREAD_ID	dislreagent.cpp	145;"	d	file:
JNI_OnLoad	long.cpp	/^jint JNI_OnLoad(JavaVM* vm, void* reserved){$/;"	f
Java_ch_usi_dag_dislre_REDispatch_analysisEnd	dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_analysisEnd$/;"	f
Java_ch_usi_dag_dislre_REDispatch_analysisStart__S	dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_analysisStart__S$/;"	f
Java_ch_usi_dag_dislre_REDispatch_analysisStart__SB	dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_analysisStart__SB$/;"	f
Java_ch_usi_dag_dislre_REDispatch_registerMethod	dislreagent.cpp	/^JNIEXPORT jshort JNICALL Java_ch_usi_dag_dislre_REDispatch_registerMethod$/;"	f
Java_ch_usi_dag_dislre_REDispatch_sendBoolean	dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_sendBoolean$/;"	f
Java_ch_usi_dag_dislre_REDispatch_sendByte	dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_sendByte$/;"	f
Java_ch_usi_dag_dislre_REDispatch_sendChar	dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_sendChar$/;"	f
Java_ch_usi_dag_dislre_REDispatch_sendDouble	dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_sendDouble$/;"	f
Java_ch_usi_dag_dislre_REDispatch_sendFloat	dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_sendFloat$/;"	f
Java_ch_usi_dag_dislre_REDispatch_sendInt	dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_sendInt$/;"	f
Java_ch_usi_dag_dislre_REDispatch_sendLong	dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_sendLong$/;"	f
Java_ch_usi_dag_dislre_REDispatch_sendObject	dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_sendObject$/;"	f
Java_ch_usi_dag_dislre_REDispatch_sendObjectPlusData	dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_sendObjectPlusData$/;"	f
Java_ch_usi_dag_dislre_REDispatch_sendShort	dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_sendShort$/;"	f
LOCAL_MODULE	Android.mk	/^LOCAL_MODULE:= libarithmetic$/;"	m
LOCAL_MODULE_TAGS	Android.mk	/^LOCAL_MODULE_TAGS := samples$/;"	m
LOCAL_PATH	Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PRELINK_MODULE	Android.mk	/^LOCAL_PRELINK_MODULE := false$/;"	m
LOCAL_SHARED_LIBRARIES	Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SRC_FILES	Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_STATIC_LIBRARIES	Android.mk	/^LOCAL_STATIC_LIBRARIES :=$/;"	m
LOG_TAG	long.cpp	1;"	d	file:
MAX_OBJ_FREE_EVENTS	dislreagent.cpp	121;"	d	file:
MSG_ANALYZE	messagetype.h	/^static const jbyte MSG_ANALYZE = 1;$/;"	v
MSG_CLASS_INFO	messagetype.h	/^static const jbyte MSG_CLASS_INFO = 4;$/;"	v
MSG_CLOSE	messagetype.h	/^static const jbyte MSG_CLOSE = 0;$/;"	v
MSG_NEW_CLASS	messagetype.h	/^static const jbyte MSG_NEW_CLASS = 3;$/;"	v
MSG_OBJ_FREE	messagetype.h	/^static const jbyte MSG_OBJ_FREE = 2;$/;"	v
MSG_REG_ANALYSIS	messagetype.h	/^static const jbyte MSG_REG_ANALYSIS = 6;$/;"	v
MSG_STRING_INFO	messagetype.h	/^static const jbyte MSG_STRING_INFO = 5;$/;"	v
MSG_THREAD_END	messagetype.h	/^static const jbyte MSG_THREAD_END = 8;$/;"	v
MSG_THREAD_INFO	messagetype.h	/^static const jbyte MSG_THREAD_INFO = 7;$/;"	v
NULL_NET_REF	dislreagent.cpp	132;"	d	file:
OBJECT_ID_MASK	netref.h	/^static const uint64_t OBJECT_ID_MASK = 0xFFFFFFFFFFL;$/;"	v
OBJECT_ID_POS	netref.h	/^static const uint8_t OBJECT_ID_POS = 0;$/;"	v
OT_DATA_OBJECT	dislreagent.cpp	94;"	d	file:
OT_OBJECT	dislreagent.cpp	93;"	d	file:
PB_FREE	dislreagent.cpp	/^static const jlong PB_FREE = -100;$/;"	v	file:
PB_OBJTAG	dislreagent.cpp	/^static const jlong PB_OBJTAG = -101;$/;"	v	file:
PB_SEND	dislreagent.cpp	/^static const jlong PB_SEND = -102;$/;"	v	file:
PB_UTILITY	dislreagent.cpp	/^static const jlong PB_UTILITY = -1000;$/;"	v	file:
SPEC_MASK	netref.h	/^static const uint64_t SPEC_MASK = 0x1;$/;"	v
SPEC_POS	netref.h	/^static const uint8_t SPEC_POS = 63;$/;"	v
STARTING_THREAD_ID	dislreagent.cpp	147;"	d	file:
STRING_CLASS	dislreagent.cpp	/^static jclass STRING_CLASS = NULL;$/;"	v	file:
THREAD_CLASS	dislreagent.cpp	/^static jclass THREAD_CLASS = NULL;$/;"	v	file:
TO_BUFFER_COUNT	dislreagent.cpp	113;"	d	file:
TO_BUFFER_MAX_ID	dislreagent.cpp	112;"	d	file:
TRUE	asserter.h	11;"	d
UnionJNIEnvToVoid	long.cpp	/^}UnionJNIEnvToVoid;$/;"	t	typeref:union:__anon6	file:
_ASSERTER_H	asserter.h	2;"	d
_BLOCKINGQUEUE_H	blockingqueue.h	2;"	d
_BUFFER_H	buffer.h	2;"	d
_BUFFPACK_H	buffpack.h	2;"	d
_COMM_H	comm.h	2;"	d
_DISLAGENT_H	dislreagent.h	4;"	d
_MESSAGETYPE_H	messagetype.h	2;"	d
_NETREF_H	netref.h	2;"	d
_UTILITY_H	utility.h	2;"	d
_bq_monitor_enter	blockingqueue.h	/^static void _bq_monitor_enter(blocking_queue * bq) {$/;"	f
_bq_monitor_exit	blockingqueue.h	/^static void _bq_monitor_exit(blocking_queue * bq) {$/;"	f
_bq_monitor_notify_all	blockingqueue.h	/^static void _bq_monitor_notify_all(blocking_queue * bq) {$/;"	f
_bq_monitor_wait	blockingqueue.h	/^static void _bq_monitor_wait(blocking_queue * bq) {$/;"	f
_buffs_objtag_get	dislreagent.cpp	/^static process_buffs * _buffs_objtag_get() {$/;"	f	file:
_buffs_release	dislreagent.cpp	/^static void _buffs_release(process_buffs * buffs) {$/;"	f	file:
_buffs_send	dislreagent.cpp	/^static void _buffs_send(process_buffs * buffs) {$/;"	f	file:
_buffs_send_get	dislreagent.cpp	/^static process_buffs * _buffs_send_get() {$/;"	f	file:
_buffs_utility_release	dislreagent.cpp	/^static void _buffs_utility_release(process_buffs * buffs) {$/;"	f	file:
_fill_ot_rec	dislreagent.cpp	/^static void _fill_ot_rec(JNIEnv * jni_env, buffer * cmd_buff,$/;"	f	file:
_get_class_for_object	netref.h	/^static jclass _get_class_for_object(JNIEnv * jni_env, jobject obj) {$/;"	f
_get_class_id_for_class	netref.h	/^static jint _get_class_id_for_class(JNIEnv * jni_env, Thread* self,$/;"	f
_get_class_id_for_object	netref.h	/^static jint _get_class_id_for_object(JNIEnv * jni_env, Thread* self,$/;"	f
_object_is_class	netref.h	/^static bool _object_is_class(Thread* self,  jobject obj) {$/;"	f
_pack_class_info	netref.h	/^static void _pack_class_info(buffer * buff, jlong class_net_ref,$/;"	f
_send_buffer	dislreagent.cpp	/^static void _send_buffer(int connection, buffer * b) {$/;"	f	file:
_set_net_reference	netref.h	/^static jlong _set_net_reference(Thread * self, jobject obj,$/;"	f
_set_net_reference_for_class	netref.h	/^static jlong _set_net_reference_for_class(JNIEnv * jni_env,$/;"	f
_set_net_reference_for_object	netref.h	/^static jlong _set_net_reference_for_object(JNIEnv * jni_env,$/;"	f
add	long.cpp	/^jint add(JNIEnv *env, jobject thiz, jint x, jint y){$/;"	f
analysis_buff	dislreagent.cpp	/^	buffer * analysis_buff;$/;"	m	struct:__anon3	file:
analysis_buff	dislreagent.cpp	/^	buffer * analysis_buff;$/;"	m	struct:tldata	file:
analysis_count	dislreagent.cpp	/^	jint analysis_count;$/;"	m	struct:__anon5	file:
analysis_count	dislreagent.cpp	/^	jint analysis_count;$/;"	m	struct:tldata	file:
analysis_count_pos	dislreagent.cpp	/^	size_t analysis_count_pos;$/;"	m	struct:__anon5	file:
analysis_count_pos	dislreagent.cpp	/^	size_t analysis_count_pos;$/;"	m	struct:tldata	file:
analysis_end	dislreagent.cpp	/^static void analysis_end(struct tldata * tld) {$/;"	f	file:
analysis_end_buff	dislreagent.cpp	/^static void analysis_end_buff(struct tldata * tld) {$/;"	f	file:
analysis_start	dislreagent.cpp	/^static void analysis_start($/;"	f	file:
analysis_start_buff	dislreagent.cpp	/^void analysis_start_buff($/;"	f
args_length_pos	dislreagent.cpp	/^	size_t args_length_pos;$/;"	m	struct:tldata	file:
avail_analysis_id	dislreagent.cpp	/^static volatile jshort avail_analysis_id = 1;$/;"	v	file:
avail_class_id	dislreagent.cpp	/^static volatile jint avail_class_id = 1;$/;"	v	file:
avail_class_id	netref.h	/^static volatile jint avail_class_id;$/;"	v
avail_object_id	dislreagent.cpp	/^static volatile jlong avail_object_id = 1;$/;"	v	file:
avail_object_id	netref.h	/^static volatile jlong avail_object_id;$/;"	v
avail_thread_id	dislreagent.cpp	/^static volatile jlong avail_thread_id = STARTING_THREAD_ID;$/;"	v	file:
blocking_queue	blockingqueue.h	/^} blocking_queue;$/;"	t	typeref:struct:__anon2
bq_create	blockingqueue.h	/^void bq_create(jvmtiEnv *jvmti, blocking_queue * bq, size_t queue_capacity,$/;"	f
bq_length	blockingqueue.h	/^size_t bq_length(blocking_queue * bq) {$/;"	f
bq_pop	blockingqueue.h	/^void bq_pop(blocking_queue * bq, void * empty) {$/;"	f
bq_push	blockingqueue.h	/^void bq_push(blocking_queue * bq, void * data) {$/;"	f
bq_term	blockingqueue.h	/^void bq_term (blocking_queue * bq) {$/;"	f
buff	buffer.h	/^	unsigned char * buff;$/;"	m	struct:__anon1
buff_pos	dislreagent.cpp	/^	size_t buff_pos;$/;"	m	struct:__anon4	file:
buff_put_int	dislreagent.cpp	/^static void buff_put_int(buffer * buff, size_t buff_pos, jint to_put) {$/;"	f	file:
buff_put_long	dislreagent.cpp	/^static void buff_put_long(buffer * buff, size_t buff_pos, jlong to_put) {$/;"	f	file:
buff_put_short	dislreagent.cpp	/^static void buff_put_short(buffer * buff, size_t buff_pos, jshort to_put) {$/;"	f	file:
buffer	buffer.h	/^} buffer;$/;"	t	typeref:struct:__anon1
buffer_alloc	buffer.h	/^void buffer_alloc(buffer * b) {$/;"	f
buffer_clean	buffer.h	/^void buffer_clean(buffer * b) {$/;"	f
buffer_fill	buffer.h	/^void buffer_fill(buffer * b, const void * data, size_t data_length) {$/;"	f
buffer_fill_at_pos	buffer.h	/^void buffer_fill_at_pos(buffer * b, size_t pos, const void * data,$/;"	f
buffer_filled	buffer.h	/^size_t buffer_filled(buffer * b) {$/;"	f
buffer_free	buffer.h	/^void buffer_free(buffer * b) {$/;"	f
buffer_read	buffer.h	/^void buffer_read(buffer * b, size_t pos, void * data, size_t data_length) {$/;"	f
buffs_get	dislreagent.cpp	/^static process_buffs * buffs_get(jlong thread_id) {$/;"	f	file:
buffs_objtag	dislreagent.cpp	/^static void buffs_objtag(process_buffs * buffs) {$/;"	f	file:
buffs_utility_get	dislreagent.cpp	/^static process_buffs * buffs_utility_get() {$/;"	f	file:
buffs_utility_send	dislreagent.cpp	/^static process_buffs * buffs_utility_send(process_buffs * buffs) {$/;"	f	file:
capacity	buffer.h	/^	size_t capacity;$/;"	m	struct:__anon1
check_error	asserter.h	/^void check_error(int cond, const char *str) {$/;"	f
check_std_error	asserter.h	/^void check_std_error(int retval, int errorval, const char *str) {$/;"	f
classPathName	long.cpp	/^static const char *classPathName = "com\/inspur\/test2\/MainActivity";$/;"	v	file:
close_connection	dislreagent.cpp	/^static void close_connection(int conn, jlong thread_id) {$/;"	f	file:
command_buff	dislreagent.cpp	/^	buffer * command_buff;$/;"	m	struct:__anon3	file:
command_buff	dislreagent.cpp	/^	buffer * command_buff;$/;"	m	struct:tldata	file:
cond	blockingqueue.h	/^	pthread_cond_t cond;$/;"	m	struct:__anon2
correct_cmd_buff_pos	dislreagent.cpp	/^static void correct_cmd_buff_pos(buffer * cmd_buff, size_t shift) {$/;"	f	file:
create_analysis_msg	dislreagent.cpp	/^static size_t create_analysis_msg(buffer * buff, jlong id) {$/;"	f	file:
create_analysis_request_header	dislreagent.cpp	/^static size_t create_analysis_request_header ($/;"	f	file:
d	buffpack.h	/^	double d;$/;"	m	union:double_jlong
division	long.cpp	/^jfloat division(JNIEnv *env, jobject thiz, jint x, jint y){$/;"	f
double_jlong	buffpack.h	/^union double_jlong {$/;"	u
empty_q	dislreagent.cpp	/^static blocking_queue empty_q;$/;"	v	file:
env	long.cpp	/^	JNIEnv* env;$/;"	m	union:__anon6	file:
f	buffpack.h	/^	float f;$/;"	m	union:float_jint
first	blockingqueue.h	/^	size_t first;$/;"	m	struct:__anon2
float_jint	buffpack.h	/^union float_jint {$/;"	u
get_bits	netref.h	/^static inline uint64_t get_bits(uint64_t from, uint64_t bit_mask,$/;"	f
get_jobject	netref.h	/^static jobject get_jobject(Object* obj){$/;"	f
get_net_reference	netref.h	/^jlong get_net_reference(JNIEnv * jni_env, Thread* self,$/;"	f
get_object	netref.h	/^Object* get_object(Thread* self, jobject obj){$/;"	f
get_tag	netref.h	/^jlong get_tag(Thread* self, jobject obj){$/;"	f
host_name	dislreagent.cpp	/^static char host_name[1024];$/;"	v	file:
htobe64	buffpack.h	11;"	d
htobe64	buffpack.h	9;"	d
i	buffpack.h	/^	jint i;$/;"	m	union:float_jint
id	dislreagent.cpp	/^	jlong id;$/;"	m	struct:tldata	file:
java_vm	dislreagent.cpp	/^static JavaVM * java_vm;$/;"	v	file:
jvm_started	dislreagent.cpp	/^static int jvm_started = FALSE;$/;"	v	file:
jvmti	blockingqueue.h	/^	jvmtiEnv * jvmti;$/;"	m	struct:__anon2
jvmti_callback_class_file_load_hook	dislreagent.cpp	/^void JNICALL jvmti_callback_class_file_load_hook($/;"	f
jvmti_callback_object_free_hook	dislreagent.cpp	/^void JNICALL jvmti_callback_object_free_hook($/;"	f
jvmti_callback_thread_end_hook	dislreagent.cpp	/^void JNICALL jvmti_callback_thread_end_hook($/;"	f
jvmti_callback_vm_death_hook	dislreagent.cpp	/^void JNICALL jvmti_callback_vm_death_hook($/;"	f
jvmti_callback_vm_init_hook	dislreagent.cpp	/^void JNICALL jvmti_callback_vm_init_hook($/;"	f
jvmti_callback_vm_start_hook	dislreagent.cpp	/^void JNICALL jvmti_callback_vm_start_hook($/;"	f
jvmti_env	dislreagent.cpp	/^static jvmtiEnv * jvmti_env;$/;"	v	file:
l	buffpack.h	/^	jlong l;$/;"	m	union:double_jlong
local_pb	dislreagent.cpp	/^	process_buffs * local_pb;$/;"	m	struct:tldata	file:
long2jlong	utility.h	/^jlong long2jlong(long l){$/;"	f
methods	long.cpp	/^static JNINativeMethod methods[]= {$/;"	v	file:
multiplication	long.cpp	/^jfloat multiplication(JNIEnv *env, jobject thiz, jint x, jint y){$/;"	f
mutex	blockingqueue.h	/^	pthread_mutex_t mutex;$/;"	m	struct:__anon2
net_ref_get_class_id	netref.h	/^inline jint net_ref_get_class_id(jlong net_ref) {$/;"	f
net_ref_get_class_instance_bit	netref.h	/^inline unsigned char net_ref_get_class_instance_bit(jlong net_ref) {$/;"	f
net_ref_get_object_id	netref.h	/^inline jlong net_ref_get_object_id(jlong net_ref) {$/;"	f
net_ref_get_spec	netref.h	/^inline unsigned char net_ref_get_spec(jlong net_ref) {$/;"	f
net_ref_set_class_id	netref.h	/^inline void net_ref_set_class_id(jlong * net_ref, jint class_id) {$/;"	f
net_ref_set_class_instance	netref.h	/^inline void net_ref_set_class_instance(jlong * net_ref, unsigned char cibit) {$/;"	f
net_ref_set_object_id	netref.h	/^inline void net_ref_set_object_id(jlong * net_ref, jlong object_id) {$/;"	f
net_ref_set_spec	netref.h	/^inline void net_ref_set_spec(jlong * net_ref, unsigned char spec) {$/;"	f
next_analysis_id	dislreagent.cpp	/^static jshort next_analysis_id () {$/;"	f	file:
next_thread_id	dislreagent.cpp	/^static jlong next_thread_id () {$/;"	f	file:
no_sending_work	dislreagent.cpp	/^static volatile int no_sending_work = FALSE;$/;"	v	file:
no_tagging_work	dislreagent.cpp	/^static volatile int no_tagging_work = FALSE;$/;"	v	file:
obj_free_buff	dislreagent.cpp	/^static process_buffs * obj_free_buff = NULL;$/;"	v	file:
obj_free_event_count	dislreagent.cpp	/^static jint obj_free_event_count = 0;$/;"	v	file:
obj_free_event_count_pos	dislreagent.cpp	/^static size_t obj_free_event_count_pos = 0;$/;"	v	file:
obj_free_lock	dislreagent.cpp	/^static jrawMonitorID obj_free_lock;$/;"	v	file:
obj_to_tag	dislreagent.cpp	/^	jobject obj_to_tag;$/;"	m	struct:__anon4	file:
obj_type	dislreagent.cpp	/^	unsigned char obj_type;$/;"	m	struct:__anon4	file:
objtag_q	dislreagent.cpp	/^static blocking_queue objtag_q;$/;"	v	file:
objtag_rec	dislreagent.cpp	/^} objtag_rec;$/;"	t	typeref:struct:__anon4	file:
objtag_thread	dislreagent.cpp	/^static pthread_t objtag_thread;$/;"	v	file:
objtag_thread_loop	dislreagent.cpp	/^static void * objtag_thread_loop(void * obj) {$/;"	f	file:
occupied	blockingqueue.h	/^	size_t occupied;$/;"	m	struct:__anon2
occupied	buffer.h	/^	size_t occupied;$/;"	m	struct:__anon1
open_connection	dislreagent.cpp	/^static int open_connection() {$/;"	f	file:
ot_pack_aditional_data	dislreagent.cpp	/^static void ot_pack_aditional_data(JNIEnv * jni_env, jlong * net_ref,$/;"	f	file:
ot_pack_string_data	dislreagent.cpp	/^static void ot_pack_string_data(JNIEnv * jni_env, buffer * buff,$/;"	f	file:
ot_pack_thread_data	dislreagent.cpp	/^static void ot_pack_thread_data(JNIEnv * jni_env, buffer * buff,$/;"	f	file:
ot_relese_global_ref	dislreagent.cpp	/^static void ot_relese_global_ref(JNIEnv * jni_env, buffer * cmd_buff) {$/;"	f	file:
ot_tag_buff	dislreagent.cpp	/^static void ot_tag_buff(JNIEnv * jni_env, buffer * anl_buff, buffer * cmd_buff,$/;"	f	file:
ot_tag_record	dislreagent.cpp	/^static void ot_tag_record(JNIEnv * jni_env, buffer * buff, size_t buff_pos,$/;"	f	file:
owner_id	dislreagent.cpp	/^	jlong owner_id;$/;"	m	struct:__anon3	file:
pack_boolean	buffpack.h	/^void pack_boolean(buffer * buff, jboolean to_send) {$/;"	f
pack_byte	buffpack.h	/^void pack_byte(buffer * buff, jbyte to_send) {$/;"	f
pack_bytes	buffpack.h	/^void pack_bytes(buffer * buff, const void * data, jint size) {$/;"	f
pack_char	buffpack.h	/^void pack_char(buffer * buff, jchar to_send) {$/;"	f
pack_double	buffpack.h	/^void pack_double(buffer * buff, jdouble to_send) {$/;"	f
pack_float	buffpack.h	/^void pack_float(buffer * buff, jfloat to_send) {$/;"	f
pack_int	buffpack.h	/^void pack_int(buffer * buff, jint to_send) {$/;"	f
pack_long	buffpack.h	/^void pack_long(buffer * buff, jlong to_send) {$/;"	f
pack_object	dislreagent.cpp	/^static void pack_object(JNIEnv * jni_env, buffer * buff, buffer * cmd_buff,$/;"	f	file:
pack_short	buffpack.h	/^void pack_short(buffer * buff, jshort to_send) {$/;"	f
pack_string_utf8	buffpack.h	/^void pack_string_utf8(buffer * buff, const void * string_utf8,$/;"	f
parse_agent_options	dislreagent.cpp	/^static void parse_agent_options(char *options) {$/;"	f	file:
pb	dislreagent.cpp	/^	process_buffs * pb;$/;"	m	struct:__anon5	file:
pb	dislreagent.cpp	/^	process_buffs * pb;$/;"	m	struct:tldata	file:
pb_list	dislreagent.cpp	/^static process_buffs pb_list[BQ_BUFFERS + BQ_UTILITY];$/;"	v	file:
port_number	dislreagent.cpp	/^static char port_number[6]; \/\/ including final 0$/;"	v	file:
process_buffs	dislreagent.cpp	/^} process_buffs;$/;"	t	typeref:struct:__anon3	file:
qa_element_size	blockingqueue.h	/^	size_t qa_element_size;$/;"	m	struct:__anon2
qa_size	blockingqueue.h	/^	size_t qa_size;$/;"	m	struct:__anon2
qarray	blockingqueue.h	/^	char * qarray;$/;"	m	struct:__anon2
rcv_data	comm.h	/^void rcv_data(int sockfd, void * data, int data_len) {$/;"	f
registerNativeMethods	long.cpp	/^static int registerNativeMethods(JNIEnv* env, const char* className,$/;"	f	file:
registerNatives	long.cpp	/^static int registerNatives(JNIEnv *env){$/;"	f	file:
register_method	dislreagent.cpp	/^static jshort register_method($/;"	f	file:
send_all_to_buffers	dislreagent.cpp	/^static void send_all_to_buffers() {$/;"	f	file:
send_data	comm.h	/^void send_data(int sockfd, const void * data, int data_len) {$/;"	f
send_obj_free_buffer	dislreagent.cpp	/^static void send_obj_free_buffer() {$/;"	f	file:
send_q	dislreagent.cpp	/^static blocking_queue send_q;$/;"	v	file:
send_thread	dislreagent.cpp	/^static pthread_t send_thread;$/;"	v	file:
send_thread_buffers	dislreagent.cpp	/^static void send_thread_buffers(struct tldata * tld) {$/;"	f	file:
send_thread_loop	dislreagent.cpp	/^static void * send_thread_loop(void * obj) {$/;"	f	file:
set_bits	netref.h	/^static inline void set_bits(uint64_t * to, uint64_t bits,$/;"	f
set_tag	netref.h	/^static void set_tag(Thread* self, jobject obj, jlong tag){$/;"	f
substraction	long.cpp	/^jint substraction(JNIEnv *env, jobject thiz, jint x, jint y){$/;"	f
tagging_lock	dislreagent.cpp	/^static jrawMonitorID tagging_lock;$/;"	v	file:
tld	dislreagent.cpp	/^static __thread struct tldata tld = {$/;"	v	typeref:struct:tldata	file:
tld_create	dislreagent.cpp	/^static struct tldata * tld_create ()  {$/;"	f	file:
tld_get	dislreagent.cpp	/^inline static struct tldata * tld_get () {$/;"	f	file:
tld_init	dislreagent.cpp	/^inline static struct tldata * tld_init (struct tldata * tld) {$/;"	f	file:
tldata	dislreagent.cpp	/^struct tldata {$/;"	s	file:
tls_init	dislreagent.cpp	/^static void tls_init () {$/;"	f	file:
tls_key	dislreagent.cpp	/^static pthread_key_t tls_key;$/;"	v	file:
to_buff_array	dislreagent.cpp	/^static to_buff_struct to_buff_array[TO_BUFFER_COUNT];$/;"	v	file:
to_buff_id	dislreagent.cpp	/^	jbyte to_buff_id;$/;"	m	struct:tldata	file:
to_buff_lock	dislreagent.cpp	/^static jrawMonitorID to_buff_lock;$/;"	v	file:
to_buff_struct	dislreagent.cpp	/^} to_buff_struct;$/;"	t	typeref:struct:__anon5	file:
update_net_reference	netref.h	/^void update_net_reference(Thread * self, jobject obj, jlong net_ref) {$/;"	f
update_send_status	dislreagent.cpp	/^static void update_send_status(jobject to_send, jlong * net_ref) {$/;"	f	file:
utility_q	dislreagent.cpp	/^static blocking_queue utility_q;$/;"	v	file:
venv	long.cpp	/^	void* venv;$/;"	m	union:__anon6	file:
