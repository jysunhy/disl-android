!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ANALYSIS_COUNT	jni.bak/dislreagent.cpp	78;"	d	file:
ANALYSIS_QUEUE_SIZE	jni/ReProtocol.h	15;"	d
APP_STL	Android.mk	/^APP_STL := stlport_static$/;"	m
APP_STL	jni.bak/Android.mk	/^APP_STL := stlport_static$/;"	m
APP_STL	jni.bak/Application.mk	/^APP_STL := stlport_static$/;"	m
APP_STL	jni.bak2/Android.mk	/^APP_STL := stlport_static$/;"	m
APP_STL	jni.bak2/Application.mk	/^APP_STL := stlport_static$/;"	m
APP_STL	jni/Application.mk	/^APP_STL := stlport_static # system|stlport_static|stlport_shared|gnustl_static$/;"	m
ASSERT	jni.bak2/Common.h	12;"	d
ASSERT	jni/DalvikHeader.h	9;"	d
ASSERT	jni/Debug.h	10;"	d
AnalysisEndEvent	jni/ReProtocol.h	/^		bool AnalysisEndEvent(thread_id_type tid){$/;"	f	class:ReProtocol
AnalysisStartEvent	jni/ReProtocol.h	/^		bool AnalysisStartEvent(thread_id_type tid, ordering_id_type oid, short methodId){$/;"	f	class:ReProtocol
BQ_BUFFERS	jni.bak/dislreagent.cpp	75;"	d	file:
BQ_UTILITY	jni.bak/dislreagent.cpp	69;"	d	file:
BUF_SIZE	jni/Buffer.h	4;"	d
BUILDDIR	jni/Makefile	/^BUILDDIR=.\/build$/;"	m
BaseQueue	jni/ReQueue.h	/^		BaseQueue(){$/;"	f	class:BaseQueue
BaseQueue	jni/ReQueue.h	/^		BaseQueue(int capacity):q_capacity(capacity),q_occupied(0){$/;"	f	class:BaseQueue
BaseQueue	jni/ReQueue.h	/^class BaseQueue{$/;"	c
Buffer	jni/Buffer.h	/^		Buffer(int capacity=BUF_SIZE):buf_capacity(capacity),buf_occupied(0){$/;"	f	class:Buffer
Buffer	jni/Buffer.h	/^class Buffer{$/;"	c
Buffer	jni/ReQueue.h	/^		Buffer(int capacity):BaseQueue(capacity){}$/;"	f	class:Buffer
Buffer	jni/ReQueue.h	/^class Buffer: public BaseQueue{$/;"	c
CLASS_ID_MASK	jni.bak/netref.h	/^static const uint64_t CLASS_ID_MASK = 0x3FFFFF;$/;"	v
CLASS_ID_MASK	jni/Netref.h	/^static const uint64_t CLASS_ID_MASK = 0x3FFFFF;$/;"	v
CLASS_ID_POS	jni.bak/netref.h	/^static const uint8_t CLASS_ID_POS = 40;$/;"	v
CLASS_ID_POS	jni/Netref.h	/^static const uint8_t CLASS_ID_POS = 40;$/;"	v
CLASS_INSTANCE_MASK	jni.bak/netref.h	/^static const uint64_t CLASS_INSTANCE_MASK = 0x1;$/;"	v
CLASS_INSTANCE_MASK	jni/Netref.h	/^static const uint64_t CLASS_INSTANCE_MASK = 0x1;$/;"	v
CLASS_INSTANCE_POS	jni.bak/netref.h	/^static const uint8_t CLASS_INSTANCE_POS = 62;$/;"	v
CLASS_INSTANCE_POS	jni/Netref.h	/^static const uint8_t CLASS_INSTANCE_POS = 62;$/;"	v
COMMON_FLAGS	jni/Makefile	/^COMMON_FLAGS=-fPIC$/;"	m
CPPFLAGS	jni/Makefile	/^CPPFLAGS=-I\/usr\/lib\/jvm\/java-6-oracle\/include -I\/usr\/lib\/jvm\/java-6-oracle\/include\/linux$/;"	m
CodeExecutedRE	src/ch/usi/dag/dislre/CodeExecutedRE.java	/^public class CodeExecutedRE {$/;"	c
Connect	jni/Socket.cpp	/^bool Socket::Connect ( const char* host, const int port )$/;"	f	class:Socket
ConnectionClose	jni/ReProtocol.h	/^		bool ConnectionClose(){$/;"	f	class:ReProtocol
DEBUG	jni.bak2/Common.h	16;"	d
DEBUG	jni/DalvikHeader.h	13;"	d
DEBUG	jni/Debug.h	14;"	d
DEFAULT_HOST	jni.bak/dislreagent.cpp	/^static const char * DEFAULT_HOST = "localhost";$/;"	v	file:
DEFAULT_LOCK_BUFFER	jni/Lock.h	7;"	d
DEFAULT_MAP_SIZE	jni/Map.h	9;"	d
DEFAULT_PORT	jni.bak/dislreagent.cpp	/^static const char * DEFAULT_PORT = "11218";$/;"	v	file:
DEFAULT_QUEUE_SIZE	jni.bak2/ReQueue.h	7;"	d
DEFAULT_QUEUE_SIZE	jni/ReQueue.h	7;"	d
DoubleCapacity	jni/Buffer.h	/^		void DoubleCapacity(){$/;"	f	class:Buffer
DoubleCapacity	jni/ReQueue.h	/^		void DoubleCapacity(){$/;"	f	class:Buffer
ERR	jni.bak/asserter.h	15;"	d
ERROR	jni.bak2/Common.h	14;"	d
ERROR	jni/DalvikHeader.h	11;"	d
ERROR	jni/Debug.h	12;"	d
ERR_PREFIX	jni.bak/dislreagent.cpp	14;"	d	file:
ERR_PREFIX	jni.bak/long.cpp	2;"	d	file:
ERR_PREFIX	jni.bak2/long.cpp	2;"	d	file:
ERR_PREFIX	jni/long.cpp	2;"	d	file:
ERR_SERVER	jni.bak/dislreagent.cpp	/^static const int ERR_SERVER = 10003;$/;"	v	file:
ERR_STD	jni.bak/asserter.h	16;"	d
Enqueue	jni.bak2/ReQueue.h	/^		bool Enqueue(const char* data, int length){$/;"	f	class:ReQueue
Enqueue	jni/ReQueue.h	/^		virtual int Enqueue(const char* data, int length){$/;"	f	class:BaseQueue
Enqueue	jni/ReQueue.h	/^		virtual int Enqueue(const char* data, int length){$/;"	f	class:Buffer
Enqueue	jni/ReQueue.h	/^		virtual int Enqueue(const char* data, int length){$/;"	f	class:ReQueue
EnqueueJboolean	jni/ReQueue.h	/^		int EnqueueJboolean(jboolean data){$/;"	f	class:BaseQueue
EnqueueJbype	jni.bak2/ReQueue.h	/^		bool EnqueueJbype(jbyte data){$/;"	f	class:ReQueue
EnqueueJbyte	jni/ReQueue.h	/^		int EnqueueJbyte(jbyte data){$/;"	f	class:BaseQueue
EnqueueJchar	jni/ReQueue.h	/^		int EnqueueJchar(jchar data){$/;"	f	class:BaseQueue
EnqueueJdouble	jni/ReQueue.h	/^		int EnqueueJdouble(jdouble data){$/;"	f	class:BaseQueue
EnqueueJfloat	jni/ReQueue.h	/^		int EnqueueJfloat(jfloat data){$/;"	f	class:BaseQueue
EnqueueJint	jni/ReQueue.h	/^		int EnqueueJint(jint data){$/;"	f	class:BaseQueue
EnqueueJlong	jni.bak2/ReQueue.h	/^		bool EnqueueJlong(jlong data){$/;"	f	class:ReQueue
EnqueueJlong	jni/ReQueue.h	/^		int EnqueueJlong(jlong data){$/;"	f	class:BaseQueue
EnqueueJshort	jni.bak2/ReQueue.h	/^		bool EnqueueJshort(jshort data){$/;"	f	class:ReQueue
EnqueueJshort	jni/ReQueue.h	/^		int EnqueueJshort(jshort data){$/;"	f	class:BaseQueue
EnqueueStringUtf8	jni/ReQueue.h	/^		int EnqueueStringUtf8(const char* string_utf8, uint16_t size_in_bytes){$/;"	f	class:BaseQueue
Exist	jni/Map.h	/^		bool Exist(const K &key){$/;"	f	class:Map
FALSE	jni.bak/asserter.h	12;"	d
Get	jni/Map.h	/^		V& Get(const K &key){$/;"	f	class:Map
GetData	jni.bak2/ReQueue.h	/^		void GetData(char* &data, int &length){$/;"	f	class:ReQueue
GetData	jni/ReQueue.h	/^		virtual void GetData(char* &data, int &length){$/;"	f	class:BaseQueue
GetLock	jni/Lock.h	/^		pthread_mutex_t* GetLock(lock_id_type lockid){$/;"	f	class:LockBuffer
GetOrderingId	jni/ReProtocol.h	/^		ordering_id_type GetOrderingId(thread_id_type tid){$/;"	f	class:ReProtocol
INIT_BUFF_SIZE	jni.bak/buffer.h	/^static const size_t INIT_BUFF_SIZE = 512;$/;"	v
INVALID_BUFF_ID	jni.bak/dislreagent.cpp	116;"	d	file:
INVALID_ORDERING_ID	jni.bak2/ReProtocol.h	11;"	d
INVALID_ORDERING_ID	jni/ReProtocol.h	12;"	d
INVALID_THREAD_ID	jni.bak/dislreagent.cpp	154;"	d	file:
INVALID_THREAD_ID	jni/ReProtocol.h	13;"	d
INVOCATION_SIZE	jni/ReProtocol.h	16;"	d
InvocationEndEvent	jni.bak2/ReProtocol.h	/^		void InvocationEndEvent(){$/;"	f	class:ReProtocol
InvocationStartEvent	jni.bak2/ReProtocol.h	/^		void InvocationStartEvent(long orderingId, short methodId){$/;"	f	class:ReProtocol
IsEmpty	jni.bak2/ReQueue.h	/^		bool IsEmpty(){$/;"	f	class:ReQueue
IsEmpty	jni/ReQueue.h	/^		bool IsEmpty(){$/;"	f	class:BaseQueue
JNI_OnLoad	jni.bak/dislreagent.cpp	/^jint JNI_OnLoad(JavaVM *jvm, void *reserved) {$/;"	f
JNI_OnLoad	jni.bak/long.cpp	/^jint JNI_OnLoad(JavaVM* vm, void* reserved){$/;"	f
JNI_OnLoad	jni.bak2/ReAgent.cpp	/^jint JNI_OnLoad(JavaVM* vm, void* reserved){$/;"	f
JNI_OnLoad	jni.bak2/long.cpp	/^jint JNI_OnLoad(JavaVM* vm, void* reserved){$/;"	f
JNI_OnLoad	jni/ReAgent.cpp	/^jint JNI_OnLoad(JavaVM* vm, void* reserved){$/;"	f
JNI_OnLoad	jni/long.cpp	/^jint JNI_OnLoad(JavaVM* vm, void* reserved){$/;"	f
Java_ch_usi_dag_dislre_REDispatch_analysisEnd	jni.bak/dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_analysisEnd$/;"	f
Java_ch_usi_dag_dislre_REDispatch_analysisStart__S	jni.bak/dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_analysisStart__S$/;"	f
Java_ch_usi_dag_dislre_REDispatch_analysisStart__SB	jni.bak/dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_analysisStart__SB$/;"	f
Java_ch_usi_dag_dislre_REDispatch_registerMethod	jni.bak/dislreagent.cpp	/^JNIEXPORT jshort JNICALL Java_ch_usi_dag_dislre_REDispatch_registerMethod$/;"	f
Java_ch_usi_dag_dislre_REDispatch_sendBoolean	jni.bak/dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_sendBoolean$/;"	f
Java_ch_usi_dag_dislre_REDispatch_sendByte	jni.bak/dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_sendByte$/;"	f
Java_ch_usi_dag_dislre_REDispatch_sendChar	jni.bak/dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_sendChar$/;"	f
Java_ch_usi_dag_dislre_REDispatch_sendDouble	jni.bak/dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_sendDouble$/;"	f
Java_ch_usi_dag_dislre_REDispatch_sendFloat	jni.bak/dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_sendFloat$/;"	f
Java_ch_usi_dag_dislre_REDispatch_sendInt	jni.bak/dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_sendInt$/;"	f
Java_ch_usi_dag_dislre_REDispatch_sendLong	jni.bak/dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_sendLong$/;"	f
Java_ch_usi_dag_dislre_REDispatch_sendObject	jni.bak/dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_sendObject$/;"	f
Java_ch_usi_dag_dislre_REDispatch_sendObjectPlusData	jni.bak/dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_sendObjectPlusData$/;"	f
Java_ch_usi_dag_dislre_REDispatch_sendShort	jni.bak/dislreagent.cpp	/^JNIEXPORT void JNICALL Java_ch_usi_dag_dislre_REDispatch_sendShort$/;"	f
LIBNAME	jni/Makefile	/^LIBNAME=dislreagent$/;"	m
LIBRARY	jni/Makefile	/^LIBRARY=lib$(LIBNAME).jnilib$/;"	m
LIBRARY	jni/Makefile	/^LIBRARY=lib$(LIBNAME).so$/;"	m
LINK_SHARED	jni/Makefile	/^LINK_SHARED=$(LINK.c) -shared -o $@$/;"	m
LOCAL_JNI_SHARED_LIBRARIES	Android.mk	/^LOCAL_JNI_SHARED_LIBRARIES := libshadowvm$/;"	m
LOCAL_MODULE	jni.bak/Android.mk	/^LOCAL_MODULE:= libarithmetic$/;"	m
LOCAL_MODULE	jni.bak2/Android.mk	/^LOCAL_MODULE:= libshadowvm$/;"	m
LOCAL_MODULE	jni/Android.mk	/^LOCAL_MODULE:= libshadowvm$/;"	m
LOCAL_MODULE_TAGS	Android.mk	/^LOCAL_MODULE_TAGS := samples $/;"	m
LOCAL_MODULE_TAGS	jni.bak/Android.mk	/^LOCAL_MODULE_TAGS := samples$/;"	m
LOCAL_MODULE_TAGS	jni.bak2/Android.mk	/^LOCAL_MODULE_TAGS := samples$/;"	m
LOCAL_MODULE_TAGS	jni/Android.mk	/^LOCAL_MODULE_TAGS := samples$/;"	m
LOCAL_PACKAGE_NAME	Android.mk	/^LOCAL_PACKAGE_NAME := LongTest$/;"	m
LOCAL_PATH	Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	jni.bak/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	jni.bak2/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PATH	jni/Android.mk	/^LOCAL_PATH:= $(call my-dir)$/;"	m
LOCAL_PRELINK_MODULE	jni.bak/Android.mk	/^LOCAL_PRELINK_MODULE := false$/;"	m
LOCAL_PRELINK_MODULE	jni.bak2/Android.mk	/^LOCAL_PRELINK_MODULE := false$/;"	m
LOCAL_PRELINK_MODULE	jni/Android.mk	/^LOCAL_PRELINK_MODULE := false$/;"	m
LOCAL_SHARED_LIBRARIES	Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	jni.bak/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	jni.bak2/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SHARED_LIBRARIES	jni/Android.mk	/^LOCAL_SHARED_LIBRARIES := \\$/;"	m
LOCAL_SRC_FILES	Android.mk	/^LOCAL_SRC_FILES := $(call all-java-files-under, src)$/;"	m
LOCAL_SRC_FILES	jni.bak/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	jni.bak2/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_SRC_FILES	jni/Android.mk	/^LOCAL_SRC_FILES:= \\$/;"	m
LOCAL_STATIC_LIBRARIES	jni.bak/Android.mk	/^LOCAL_STATIC_LIBRARIES :=$/;"	m
LOCAL_STATIC_LIBRARIES	jni.bak2/Android.mk	/^LOCAL_STATIC_LIBRARIES :=$/;"	m
LOG_TAG	jni.bak/long.cpp	1;"	d	file:
LOG_TAG	jni.bak2/Common.h	10;"	d
LOG_TAG	jni.bak2/long.cpp	1;"	d	file:
LOG_TAG	jni/long.cpp	1;"	d	file:
Lock	jni/Lock.h	/^		void Lock(lock_id_type lockid){$/;"	f	class:LockBuffer
LockBuffer	jni/Lock.h	/^		LockBuffer(int capacity=DEFAULT_LOCK_BUFFER):b_capacity(capacity),b_occupied(0){$/;"	f	class:LockBuffer
LockBuffer	jni/Lock.h	/^class LockBuffer{$/;"	c
MAXCONNECTIONS	jni.bak2/Socket.h	/^const int MAXCONNECTIONS = 5;$/;"	v
MAXCONNECTIONS	jni/Socket.h	/^const int MAXCONNECTIONS = 5;$/;"	v
MAXHOSTNAME	jni.bak2/Socket.h	/^const int MAXHOSTNAME = 200;$/;"	v
MAXHOSTNAME	jni/Socket.h	/^const int MAXHOSTNAME = 200;$/;"	v
MAXRECV	jni.bak2/Socket.h	/^const int MAXRECV = 500;$/;"	v
MAXRECV	jni/Socket.h	/^const int MAXRECV = 500;$/;"	v
MAX_OBJ_FREE_EVENTS	jni.bak/dislreagent.cpp	128;"	d	file:
MSG_ANALYZE	jni.bak/messagetype.h	/^static const jbyte MSG_ANALYZE = 1;$/;"	v
MSG_ANALYZE	jni.bak2/ReProtocol.h	/^	MSG_ANALYZE,$/;"	e	enum:MsgType
MSG_ANALYZE	jni/ReProtocol.h	/^	MSG_ANALYZE,$/;"	e	enum:MsgType
MSG_CLASS_INFO	jni.bak/messagetype.h	/^static const jbyte MSG_CLASS_INFO = 4;$/;"	v
MSG_CLASS_INFO	jni.bak2/ReProtocol.h	/^	MSG_CLASS_INFO,$/;"	e	enum:MsgType
MSG_CLASS_INFO	jni/ReProtocol.h	/^	MSG_CLASS_INFO,$/;"	e	enum:MsgType
MSG_CLOSE	jni.bak/messagetype.h	/^static const jbyte MSG_CLOSE = 0;$/;"	v
MSG_CLOSE	jni.bak2/ReProtocol.h	/^	MSG_CLOSE,$/;"	e	enum:MsgType
MSG_CLOSE	jni/ReProtocol.h	/^	MSG_CLOSE,$/;"	e	enum:MsgType
MSG_NEW_CLASS	jni.bak/messagetype.h	/^static const jbyte MSG_NEW_CLASS = 3;$/;"	v
MSG_NEW_CLASS	jni.bak2/ReProtocol.h	/^	MSG_NEW_CLASS,$/;"	e	enum:MsgType
MSG_NEW_CLASS	jni/ReProtocol.h	/^	MSG_NEW_CLASS,$/;"	e	enum:MsgType
MSG_OBJ_FREE	jni.bak/messagetype.h	/^static const jbyte MSG_OBJ_FREE = 2;$/;"	v
MSG_OBJ_FREE	jni.bak2/ReProtocol.h	/^	MSG_OBJ_FREE,$/;"	e	enum:MsgType
MSG_OBJ_FREE	jni/ReProtocol.h	/^	MSG_OBJ_FREE,$/;"	e	enum:MsgType
MSG_REG_ANALYSIS	jni.bak/messagetype.h	/^static const jbyte MSG_REG_ANALYSIS = 6;$/;"	v
MSG_REG_ANALYSIS	jni.bak2/ReProtocol.h	/^	MSG_REG_ANALYSIS,$/;"	e	enum:MsgType
MSG_REG_ANALYSIS	jni/ReProtocol.h	/^	MSG_REG_ANALYSIS,$/;"	e	enum:MsgType
MSG_STRING_INFO	jni.bak/messagetype.h	/^static const jbyte MSG_STRING_INFO = 5;$/;"	v
MSG_STRING_INFO	jni.bak2/ReProtocol.h	/^	MSG_STRING_INFO,$/;"	e	enum:MsgType
MSG_STRING_INFO	jni/ReProtocol.h	/^	MSG_STRING_INFO,$/;"	e	enum:MsgType
MSG_THREAD_END	jni.bak/messagetype.h	/^static const jbyte MSG_THREAD_END = 8;$/;"	v
MSG_THREAD_END	jni.bak2/ReProtocol.h	/^	MSG_THREAD_END$/;"	e	enum:MsgType
MSG_THREAD_END	jni/ReProtocol.h	/^	MSG_THREAD_END$/;"	e	enum:MsgType
MSG_THREAD_INFO	jni.bak/messagetype.h	/^static const jbyte MSG_THREAD_INFO = 7;$/;"	v
MSG_THREAD_INFO	jni.bak2/ReProtocol.h	/^	MSG_THREAD_INFO,$/;"	e	enum:MsgType
MSG_THREAD_INFO	jni/ReProtocol.h	/^	MSG_THREAD_INFO,$/;"	e	enum:MsgType
MY_LOG_TAG	jni/DalvikHeader.h	7;"	d
MainActivity	src/com/inspur/test2/MainActivity.java	/^public class MainActivity extends Activity implements OnClickListener{$/;"	c
Map	jni/Map.h	/^		Map(int capacity=DEFAULT_MAP_SIZE):b_capacity(capacity),b_occupied(0){$/;"	f	class:Map
Map	jni/Map.h	/^class Map{$/;"	c
MethodRegisterEvent	jni.bak2/ReProtocol.h	/^		void MethodRegisterEvent(string name, int threadId){$/;"	f	class:ReProtocol
MethodRegisterEvent	jni/ReProtocol.h	/^		bool MethodRegisterEvent(int threadId, jshort methodId, const char* name, int length){$/;"	f	class:ReProtocol
MsgType	jni.bak2/ReProtocol.h	/^enum MsgType{$/;"	g
MsgType	jni/ReProtocol.h	/^enum MsgType{$/;"	g
NULL_NET_REF	jni.bak/dislreagent.cpp	140;"	d	file:
NewClassEvent	jni/ReProtocol.h	/^		bool NewClassEvent(const char* name, uint16_t nameLength, jlong classLoaderId, jint codeLength, const char *bytes){$/;"	f	class:ReProtocol
NewClassInfo	jni/ReProtocol.h	/^		bool NewClassInfo(jlong netref, const char* className, int namelen, const char* generic, int glen, jlong netrefClassLoader, jlong netrefSuperClass){$/;"	f	class:ReProtocol
OBJECTS	jni/Makefile	/^OBJECTS=$(SOURCES:%.cpp=%.o)$/;"	m
OBJECT_ID_MASK	jni.bak/netref.h	/^static const uint64_t OBJECT_ID_MASK = 0xFFFFFFFFFFL;$/;"	v
OBJECT_ID_MASK	jni/Netref.h	/^static const uint64_t OBJECT_ID_MASK = 0xFFFFFFFFFFL;$/;"	v
OBJECT_ID_POS	jni.bak/netref.h	/^static const uint8_t OBJECT_ID_POS = 0;$/;"	v
OBJECT_ID_POS	jni/Netref.h	/^static const uint8_t OBJECT_ID_POS = 0;$/;"	v
OT_DATA_OBJECT	jni.bak/dislreagent.cpp	100;"	d	file:
OT_OBJECT	jni.bak/dislreagent.cpp	99;"	d	file:
ObjFreeEvent	jni.bak2/ReProtocol.h	/^		void ObjFreeEvent(long objectId){$/;"	f	class:ReProtocol
ObjFreeEvent	jni/ReProtocol.h	/^		void ObjFreeEvent(jlong objectId){$/;"	f	class:ReProtocol
PB_FREE	jni.bak/dislreagent.cpp	/^static const jlong PB_FREE = -100;$/;"	v	file:
PB_OBJTAG	jni.bak/dislreagent.cpp	/^static const jlong PB_OBJTAG = -101;$/;"	v	file:
PB_SEND	jni.bak/dislreagent.cpp	/^static const jlong PB_SEND = -102;$/;"	v	file:
PB_UTILITY	jni.bak/dislreagent.cpp	/^static const jlong PB_UTILITY = -1000;$/;"	v	file:
Print	jni/Map.h	/^		void Print(){$/;"	f	class:Map
Print	jni/ReQueue.h	/^		virtual void Print(){$/;"	f	class:BaseQueue
Push	jni/Buffer.h	/^		void Push(const char* data, int len){$/;"	f	class:Buffer
QUEUE_INVOCATION	jni.bak2/ReProtocol.h	/^	QUEUE_INVOCATION,$/;"	e	enum:QueueType
QUEUE_INVOCATION	jni/ReProtocol.h	/^	QUEUE_INVOCATION,$/;"	e	enum:QueueType
QUEUE_OBJFREE	jni.bak2/ReProtocol.h	/^	QUEUE_OBJFREE$/;"	e	enum:QueueType
QUEUE_OBJFREE	jni/ReProtocol.h	/^	QUEUE_OBJFREE$/;"	e	enum:QueueType
QueueType	jni.bak2/ReProtocol.h	/^enum QueueType{$/;"	g
QueueType	jni/ReProtocol.h	/^enum QueueType{$/;"	g
REDispatch	src/ch/usi/dag/dislre/REDispatch.java	/^public class REDispatch {$/;"	c
ReProtocol	jni.bak2/ReProtocol.h	/^		ReProtocol(const char* host, int port){$/;"	f	class:ReProtocol
ReProtocol	jni.bak2/ReProtocol.h	/^class ReProtocol{$/;"	c
ReProtocol	jni/ReProtocol.h	/^		ReProtocol(const char* host, int port){$/;"	f	class:ReProtocol
ReProtocol	jni/ReProtocol.h	/^class ReProtocol{$/;"	c
ReQueue	jni.bak2/ReQueue.h	/^		ReQueue(){$/;"	f	class:ReQueue
ReQueue	jni.bak2/ReQueue.h	/^		ReQueue(int capacity):q_capacity(capacity),q_occupied(0){$/;"	f	class:ReQueue
ReQueue	jni.bak2/ReQueue.h	/^class ReQueue {$/;"	c
ReQueue	jni/ReQueue.h	/^		ReQueue():BaseQueue(){ event_count = 0; }$/;"	f	class:ReQueue
ReQueue	jni/ReQueue.h	/^		ReQueue(int capacity):BaseQueue(capacity){ event_count = 0; }$/;"	f	class:ReQueue
ReQueue	jni/ReQueue.h	/^class ReQueue: public BaseQueue{$/;"	c
Reset	jni.bak2/ReQueue.h	/^		void Reset(){$/;"	f	class:ReQueue
Reset	jni/ReQueue.h	/^		virtual void Reset(){$/;"	f	class:BaseQueue
Reset	jni/ReQueue.h	/^		virtual void Reset(){$/;"	f	class:ReQueue
SOURCES	jni/Makefile	/^SOURCES=test.cpp$/;"	m
SPEC_MASK	jni.bak/netref.h	/^static const uint64_t SPEC_MASK = 0x1;$/;"	v
SPEC_MASK	jni/Netref.h	/^static const uint64_t SPEC_MASK = 0x1;$/;"	v
SPEC_POS	jni.bak/netref.h	/^static const uint8_t SPEC_POS = 63;$/;"	v
SPEC_POS	jni/Netref.h	/^static const uint8_t SPEC_POS = 63;$/;"	v
STARTING_THREAD_ID	jni.bak/dislreagent.cpp	156;"	d	file:
STRING_CLASS	jni.bak/dislreagent.cpp	/^static jclass STRING_CLASS = NULL;$/;"	v	file:
ScopedMutex	jni.bak2/Common.h	/^		ScopedMutex(){}$/;"	f	class:ScopedMutex
ScopedMutex	jni.bak2/Common.h	/^		ScopedMutex(pthread_mutex_t *mtx):local_mtx(mtx){$/;"	f	class:ScopedMutex
ScopedMutex	jni.bak2/Common.h	/^class ScopedMutex{$/;"	c
ScopedMutex	jni/Common.h	/^		ScopedMutex(){}$/;"	f	class:ScopedMutex
ScopedMutex	jni/Common.h	/^		ScopedMutex(pthread_mutex_t *mtx):local_mtx(mtx){$/;"	f	class:ScopedMutex
ScopedMutex	jni/Common.h	/^class ScopedMutex{$/;"	c
Send	jni.bak2/ReProtocol.h	/^		bool Send(const char* data, int length){$/;"	f	class:ReProtocol
Send	jni/ReProtocol.h	/^		bool Send(MsgType msg){$/;"	f	class:ReProtocol
Send	jni/ReProtocol.h	/^		bool Send(const char* data, int length){$/;"	f	class:ReProtocol
Send	jni/ReProtocol.h	/^		bool Send(const char* data, int length, const char* lastdata, int lastlength){$/;"	f	class:ReProtocol
Send	jni/Socket.cpp	/^bool Socket::Send ( const char* s, int length ) const$/;"	f	class:Socket
SendArgument	jni/ReProtocol.h	/^		bool SendArgument(thread_id_type tid, const char* data, int length){$/;"	f	class:ReProtocol
SendJboolean	jni/ReProtocol.h	/^		int SendJboolean(thread_id_type tid, jboolean data){$/;"	f	class:ReProtocol
SendJbyte	jni/ReProtocol.h	/^		int SendJbyte(thread_id_type tid, jbyte data){$/;"	f	class:ReProtocol
SendJchar	jni/ReProtocol.h	/^		int SendJchar(thread_id_type tid, jchar data){$/;"	f	class:ReProtocol
SendJdouble	jni/ReProtocol.h	/^		int SendJdouble(thread_id_type tid, jdouble data){$/;"	f	class:ReProtocol
SendJfloat	jni/ReProtocol.h	/^		int SendJfloat(thread_id_type tid, jfloat data){$/;"	f	class:ReProtocol
SendJint	jni/ReProtocol.h	/^		int SendJint(thread_id_type tid, jint data){$/;"	f	class:ReProtocol
SendJlong	jni/ReProtocol.h	/^		int SendJlong(thread_id_type tid, jlong data){$/;"	f	class:ReProtocol
SendJobject	jni/ReProtocol.h	/^		int SendJobject(thread_id_type tid, jlong netref){$/;"	f	class:ReProtocol
SendJshort	jni/ReProtocol.h	/^		int SendJshort(thread_id_type tid, jshort data){$/;"	f	class:ReProtocol
SendStringObject	jni/ReProtocol.h	/^		bool SendStringObject(thread_id_type tid, jlong netref, const jchar* utf8, int len){$/;"	f	class:ReProtocol
SendStringObject	jni/ReProtocol.h	/^		int SendStringObject(thread_id_type tid, jlong netref, const char* utf8, int len){$/;"	f	class:ReProtocol
SendStringUtf8	jni/ReProtocol.h	/^		int SendStringUtf8(thread_id_type tid, const char* string_utf8, uint16_t size_in_bytes){$/;"	f	class:ReProtocol
SendThreadObject	jni/ReProtocol.h	/^		int SendThreadObject(thread_id_type tid, jlong netref, const char* threadName, int len, jboolean isDaemon){$/;"	f	class:ReProtocol
Set	jni/Map.h	/^		void Set(const K &key, const V &value) {$/;"	f	class:Map
SetAndGetNetref	jni/ReAgent.cpp	/^jlong SetAndGetNetref(Object* obj){$/;"	f
SetOrderingId	jni/ReProtocol.h	/^		void SetOrderingId(thread_id_type tid, ordering_id_type oid){$/;"	f	class:ReProtocol
Socket	jni.bak2/Socket.cpp	/^Socket::Socket() :$/;"	f	class:Socket
Socket	jni.bak2/Socket.h	/^class Socket$/;"	c
Socket	jni/Socket.cpp	/^Socket::Socket() :$/;"	f	class:Socket
Socket	jni/Socket.h	/^class Socket$/;"	c
THREAD_CLASS	jni.bak/dislreagent.cpp	/^static jclass THREAD_CLASS = NULL;$/;"	v	file:
TO_BUFFER_COUNT	jni.bak/dislreagent.cpp	119;"	d	file:
TO_BUFFER_MAX_ID	jni.bak/dislreagent.cpp	118;"	d	file:
TRUE	jni.bak/asserter.h	11;"	d
UINT16_MAX	jni.bak/comm.h	12;"	d
UNAME	jni/Makefile	/^UNAME := $(shell uname)$/;"	m
UNIX_PATH_MAX	jni/Socket.cpp	20;"	d	file:
UnionJNIEnvToVoid	jni.bak/long.cpp	/^}UnionJNIEnvToVoid;$/;"	t	typeref:union:__anon6	file:
UnionJNIEnvToVoid	jni.bak2/ReAgent.cpp	/^}UnionJNIEnvToVoid;$/;"	t	typeref:union:__anon9	file:
UnionJNIEnvToVoid	jni.bak2/long.cpp	/^}UnionJNIEnvToVoid;$/;"	t	typeref:union:__anon10	file:
UnionJNIEnvToVoid	jni/ReAgent.cpp	/^}UnionJNIEnvToVoid;$/;"	t	typeref:union:__anon7	file:
UnionJNIEnvToVoid	jni/long.cpp	/^}UnionJNIEnvToVoid;$/;"	t	typeref:union:__anon8	file:
Unlock	jni/Lock.h	/^		void Unlock(lock_id_type lockid){$/;"	f	class:LockBuffer
Update	jni/ReQueue.h	/^		virtual bool Update(int pos, const char* input, int len){$/;"	f	class:BaseQueue
UpdateMutexMap	jni.bak2/ReProtocol.h	/^		bool UpdateMutexMap(long orderingId){$/;"	f	class:ReProtocol
WITH_DEXPREOPT	Android.mk	/^WITH_DEXPREOPT := false$/;"	m
_ASSERTER_H	jni.bak/asserter.h	2;"	d
_BLOCKINGQUEUE_H	jni.bak/blockingqueue.h	2;"	d
_BUFFER_H	jni.bak/buffer.h	2;"	d
_BUFFER_H_	jni/Buffer.h	2;"	d
_BUFFPACK_H	jni.bak/buffpack.h	2;"	d
_BUFFPACK_H	jni.bak2/buffpack.h	2;"	d
_BUFFPACK_H	jni/JniUtility.h	2;"	d
_BUFFPACK_H	jni/buffpack.h	2;"	d
_COMMON_H_	jni.bak2/Common.h	2;"	d
_COMMON_H_	jni/Common.h	2;"	d
_COMM_H	jni.bak/comm.h	2;"	d
_DALVIKHEADER_H_	jni/DalvikHeader.h	2;"	d
_DEBUGHEADER_H_	jni/Debug.h	2;"	d
_DISLAGENT_H	jni.bak/dislreagent.h	4;"	d
_DoubleCapacity	jni/Map.h	/^		void _DoubleCapacity(){$/;"	f	class:Map
_Exist	jni/Map.h	/^		bool _Exist(const K& key){$/;"	f	class:Map
_Get	jni/Map.h	/^		V& _Get(const K &key){$/;"	f	class:Map
_MESSAGETYPE_H	jni.bak/messagetype.h	2;"	d
_NETREF_H	jni.bak/netref.h	2;"	d
_NETREF_H	jni/Netref.h	2;"	d
_REPROTOCOL_H_	jni.bak2/ReProtocol.h	2;"	d
_REPROTOCOL_H_	jni/ReProtocol.h	2;"	d
_REQUEUE_H_	jni.bak2/ReQueue.h	2;"	d
_REQUEUE_H_	jni/ReQueue.h	2;"	d
_RE_LOCK_H_	jni/Lock.h	2;"	d
_RE_MAP_H_	jni/Map.h	2;"	d
_SOCKET_H_	jni.bak2/Socket.h	4;"	d
_SOCKET_H_	jni/Socket.h	4;"	d
_Set	jni/Map.h	/^		void _Set(const K &key, const V &value) {$/;"	f	class:Map
_UTILITY_H	jni.bak/utility.h	2;"	d
_bq_monitor_enter	jni.bak/blockingqueue.h	/^static void _bq_monitor_enter(blocking_queue * bq) {$/;"	f
_bq_monitor_exit	jni.bak/blockingqueue.h	/^static void _bq_monitor_exit(blocking_queue * bq) {$/;"	f
_bq_monitor_notify_all	jni.bak/blockingqueue.h	/^static void _bq_monitor_notify_all(blocking_queue * bq) {$/;"	f
_bq_monitor_wait	jni.bak/blockingqueue.h	/^static void _bq_monitor_wait(blocking_queue * bq) {$/;"	f
_buffs_objtag_get	jni.bak/dislreagent.cpp	/^static process_buffs * _buffs_objtag_get() {$/;"	f	file:
_buffs_release	jni.bak/dislreagent.cpp	/^static void _buffs_release(process_buffs * buffs) {$/;"	f	file:
_buffs_send	jni.bak/dislreagent.cpp	/^static void _buffs_send(process_buffs * buffs) {$/;"	f	file:
_buffs_send_get	jni.bak/dislreagent.cpp	/^static process_buffs * _buffs_send_get() {$/;"	f	file:
_buffs_utility_release	jni.bak/dislreagent.cpp	/^static void _buffs_utility_release(process_buffs * buffs) {$/;"	f	file:
_fill_ot_rec	jni.bak/dislreagent.cpp	/^static void _fill_ot_rec(JNIEnv * jni_env, buffer * cmd_buff,$/;"	f	file:
_get_class_for_object	jni.bak/netref.h	/^static jclass _get_class_for_object(JNIEnv * jni_env, jobject obj) {$/;"	f
_get_class_id_for_class	jni.bak/netref.h	/^static jint _get_class_id_for_class(JNIEnv * jni_env, Thread* self,$/;"	f
_get_class_id_for_object	jni.bak/netref.h	/^static jint _get_class_id_for_object(JNIEnv * jni_env, Thread* self,$/;"	f
_object_is_class	jni.bak/netref.h	/^static bool _object_is_class(Thread* self,  jobject obj) {$/;"	f
_pack_class_info	jni.bak/netref.h	/^static void _pack_class_info(buffer * buff, jlong class_net_ref,$/;"	f
_send_buffer	jni.bak/dislreagent.cpp	/^static void _send_buffer(int connection, buffer * b) {$/;"	f	file:
_set_net_reference	jni.bak/netref.h	/^static jlong _set_net_reference(Thread * self, jobject obj,$/;"	f
_set_net_reference	jni/Netref.h	/^static jlong _set_net_reference(jlong object_id, jint class_id, unsigned char spec, unsigned char cbit) {$/;"	f
_set_net_reference_for_class	jni.bak/netref.h	/^static jlong _set_net_reference_for_class(JNIEnv * jni_env,$/;"	f
_set_net_reference_for_object	jni.bak/netref.h	/^static jlong _set_net_reference_for_object(JNIEnv * jni_env,$/;"	f
accept	jni.bak2/Socket.cpp	/^bool Socket::accept ( Socket& new_socket ) const$/;"	f	class:Socket
accept	jni/Socket.cpp	/^bool Socket::accept ( Socket& new_socket ) const$/;"	f	class:Socket
add	jni.bak/long.cpp	/^jint add(JNIEnv *env, jobject thiz, jint x, jint y){$/;"	f
add	jni.bak2/ReAgent.cpp	/^jint add(JNIEnv *env, jobject thiz, jint x, jint y){$/;"	f
add	jni.bak2/long.cpp	/^jint add(JNIEnv *env, jobject thiz, jint x, jint y){$/;"	f
add	jni/ReAgent.cpp	/^jint add(JNIEnv *env, jobject thiz, jint x, jint y){$/;"	f
add	jni/long.cpp	/^jint add(JNIEnv *env, jobject thiz, jint x, jint y){$/;"	f
add	src/ch/usi/dag/dislre/REDispatch.java	/^	public static native int add(int a, int b);$/;"	m	class:REDispatch
add	src/com/inspur/test2/MainActivity.java	/^    public int add(int x, int y){$/;"	m	class:MainActivity
analysisEnd	jni.bak2/ReAgent.cpp	/^void analysisEnd$/;"	f
analysisEnd	jni/ReAgent.cpp	/^void analysisEnd$/;"	f
analysisEnd	src/ch/usi/dag/dislre/REDispatch.java	/^	public static native void analysisEnd();$/;"	m	class:REDispatch
analysisStart	src/ch/usi/dag/dislre/REDispatch.java	/^	public static native void analysisStart(short analysisMethodId);$/;"	m	class:REDispatch
analysisStart	src/ch/usi/dag/dislre/REDispatch.java	/^	public static native void analysisStart(short analysisMethodId,$/;"	m	class:REDispatch
analysisStart__S	jni.bak2/ReAgent.cpp	/^void analysisStart__S$/;"	f
analysisStart__S	jni/ReAgent.cpp	/^void analysisStart__S$/;"	f
analysisStart__SB	jni.bak2/ReAgent.cpp	/^void analysisStart__SB$/;"	f
analysisStart__SB	jni/ReAgent.cpp	/^void analysisStart__SB$/;"	f
analysis_buff	jni.bak/dislreagent.cpp	/^	buffer * analysis_buff;$/;"	m	struct:__anon3	file:
analysis_buff	jni.bak/dislreagent.cpp	/^	buffer * analysis_buff;$/;"	m	struct:tldata	file:
analysis_count	jni.bak/dislreagent.cpp	/^	jint analysis_count;$/;"	m	struct:__anon5	file:
analysis_count	jni.bak/dislreagent.cpp	/^	jint analysis_count;$/;"	m	struct:tldata	file:
analysis_count_pos	jni.bak/dislreagent.cpp	/^	size_t analysis_count_pos;$/;"	m	struct:__anon5	file:
analysis_count_pos	jni.bak/dislreagent.cpp	/^	size_t analysis_count_pos;$/;"	m	struct:tldata	file:
analysis_end	jni.bak/dislreagent.cpp	/^static void analysis_end(struct tldata * tld) {$/;"	f	file:
analysis_end_buff	jni.bak/dislreagent.cpp	/^static void analysis_end_buff(struct tldata * tld) {$/;"	f	file:
analysis_mtx	jni/ReProtocol.h	/^		pthread_mutex_t analysis_mtx;$/;"	m	class:ReProtocol
analysis_queue	jni/ReProtocol.h	/^		Map<ordering_id_type, ReQueue*> analysis_queue;$/;"	m	class:ReProtocol
analysis_start	jni.bak/dislreagent.cpp	/^static void analysis_start($/;"	f	file:
analysis_start_buff	jni.bak/dislreagent.cpp	/^void analysis_start_buff($/;"	f
args_length_pos	jni.bak/dislreagent.cpp	/^	size_t args_length_pos;$/;"	m	struct:tldata	file:
avail_analysis_id	jni.bak/dislreagent.cpp	/^static volatile jshort avail_analysis_id = 1;$/;"	v	file:
avail_class_id	jni.bak/netref.h	/^static volatile jint avail_class_id=1;$/;"	v
avail_class_id	jni/Netref.h	/^static volatile jint avail_class_id;$/;"	v
avail_object_id	jni.bak/netref.h	/^static volatile jlong avail_object_id=1;$/;"	v
avail_object_id	jni/Netref.h	/^static volatile jlong avail_object_id;$/;"	v
avail_thread_id	jni.bak/dislreagent.cpp	/^static volatile jlong avail_thread_id = STARTING_THREAD_ID;$/;"	v	file:
b_capacity	jni/Lock.h	/^		int b_capacity;$/;"	m	class:LockBuffer
b_capacity	jni/Map.h	/^		int b_capacity;$/;"	m	class:Map
b_ids	jni/Lock.h	/^		lock_id_type *b_ids;$/;"	m	class:LockBuffer
b_keys	jni/Map.h	/^		K *b_keys;$/;"	m	class:Map
b_locks	jni/Lock.h	/^		pthread_mutex_t *b_locks;$/;"	m	class:LockBuffer
b_occupied	jni/Lock.h	/^		int b_occupied;$/;"	m	class:LockBuffer
b_occupied	jni/Map.h	/^		int b_occupied;$/;"	m	class:Map
b_values	jni/Map.h	/^		V *b_values;$/;"	m	class:Map
beId	src/ch/usi/dag/dislre/CodeExecutedRE.java	/^	private static short beId = REDispatch.registerMethod($/;"	f	class:CodeExecutedRE	file:
bind	jni.bak2/Socket.cpp	/^bool Socket::bind ( const int port )$/;"	f	class:Socket
bind	jni/Socket.cpp	/^bool Socket::bind ( const int port )$/;"	f	class:Socket
blocking_queue	jni.bak/blockingqueue.h	/^} blocking_queue;$/;"	t	typeref:struct:__anon2
bq_create	jni.bak/blockingqueue.h	/^void bq_create(Thread* self, blocking_queue * bq, size_t queue_capacity,$/;"	f
bq_length	jni.bak/blockingqueue.h	/^size_t bq_length(blocking_queue * bq) {$/;"	f
bq_pop	jni.bak/blockingqueue.h	/^void bq_pop(blocking_queue * bq, void * empty) {$/;"	f
bq_push	jni.bak/blockingqueue.h	/^void bq_push(blocking_queue * bq, void * data) {$/;"	f
bq_term	jni.bak/blockingqueue.h	/^void bq_term (blocking_queue * bq) {$/;"	f
buf_capacity	jni/Buffer.h	/^		char* buf_capacity;$/;"	m	class:Buffer
buf_data	jni/Buffer.h	/^		char* buf_data;$/;"	m	class:Buffer
buf_occupied	jni/Buffer.h	/^		char* buf_occupied;$/;"	m	class:Buffer
buff	jni.bak/buffer.h	/^	unsigned char * buff;$/;"	m	struct:__anon1
buff_pos	jni.bak/dislreagent.cpp	/^	size_t buff_pos;$/;"	m	struct:__anon4	file:
buff_put_int	jni.bak/dislreagent.cpp	/^static void buff_put_int(buffer * buff, size_t buff_pos, jint to_put) {$/;"	f	file:
buff_put_long	jni.bak/dislreagent.cpp	/^static void buff_put_long(buffer * buff, size_t buff_pos, jlong to_put) {$/;"	f	file:
buff_put_short	jni.bak/dislreagent.cpp	/^static void buff_put_short(buffer * buff, size_t buff_pos, jshort to_put) {$/;"	f	file:
buffer	jni.bak/buffer.h	/^} buffer;$/;"	t	typeref:struct:__anon1
buffer_alloc	jni.bak/buffer.h	/^void buffer_alloc(buffer * b) {$/;"	f
buffer_clean	jni.bak/buffer.h	/^void buffer_clean(buffer * b) {$/;"	f
buffer_fill	jni.bak/buffer.h	/^void buffer_fill(buffer * b, const void * data, size_t data_length) {$/;"	f
buffer_fill_at_pos	jni.bak/buffer.h	/^void buffer_fill_at_pos(buffer * b, size_t pos, const void * data,$/;"	f
buffer_filled	jni.bak/buffer.h	/^size_t buffer_filled(buffer * b) {$/;"	f
buffer_free	jni.bak/buffer.h	/^void buffer_free(buffer * b) {$/;"	f
buffer_read	jni.bak/buffer.h	/^void buffer_read(buffer * b, size_t pos, void * data, size_t data_length) {$/;"	f
buffs_get	jni.bak/dislreagent.cpp	/^static process_buffs * buffs_get(jlong thread_id) {$/;"	f	file:
buffs_objtag	jni.bak/dislreagent.cpp	/^static void buffs_objtag(process_buffs * buffs) {$/;"	f	file:
buffs_utility_get	jni.bak/dislreagent.cpp	/^static process_buffs * buffs_utility_get() {$/;"	f	file:
buffs_utility_send	jni.bak/dislreagent.cpp	/^static process_buffs * buffs_utility_send(process_buffs * buffs) {$/;"	f	file:
button1	src/com/inspur/test2/MainActivity.java	/^	Button button1;$/;"	f	class:MainActivity
bytecodesExecuted	src/ch/usi/dag/dislre/CodeExecutedRE.java	/^	public static void bytecodesExecuted(int count) {$/;"	m	class:CodeExecutedRE
capacity	jni.bak/buffer.h	/^	size_t capacity;$/;"	m	struct:__anon1
ch.usi.dag.dislre	src/ch/usi/dag/dislre/CodeExecutedRE.java	/^package ch.usi.dag.dislre;$/;"	p
ch.usi.dag.dislre	src/ch/usi/dag/dislre/REDispatch.java	/^package ch.usi.dag.dislre;$/;"	p
check_error	jni.bak/asserter.h	/^void check_error(int cond, const char *str) {$/;"	f
check_std_error	jni.bak/asserter.h	/^void check_std_error(int retval, int errorval, const char *str) {$/;"	f
classPathName	jni.bak/long.cpp	/^static const char *classPathName = "com\/inspur\/test2\/MainActivity";$/;"	v	file:
classPathName	jni.bak2/ReAgent.cpp	/^static const char *classPathName = "ch\/usi\/dag\/dislre\/REDispatch";$/;"	v	file:
classPathName	jni.bak2/long.cpp	/^static const char *classPathName = "com\/inspur\/test2\/MainActivity";$/;"	v	file:
classPathName	jni/ReAgent.cpp	/^static const char *classPathName = "ch\/usi\/dag\/dislre\/REDispatch";$/;"	v	file:
classPathName	jni/long.cpp	/^static const char *classPathName = "com\/inspur\/test2\/MainActivity";$/;"	v	file:
classfileLoadHook	jni/ReAgent.cpp	/^int classfileLoadHook(const char* name, int len){$/;"	f
close_connection	jni.bak/dislreagent.cpp	/^static void close_connection(int conn, jlong thread_id) {$/;"	f	file:
com.inspur.test2	src/com/inspur/test2/MainActivity.java	/^package com.inspur.test2;$/;"	p
command_buff	jni.bak/dislreagent.cpp	/^	buffer * command_buff;$/;"	m	struct:__anon3	file:
command_buff	jni.bak/dislreagent.cpp	/^	buffer * command_buff;$/;"	m	struct:tldata	file:
cond	jni.bak/blockingqueue.h	/^	pthread_cond_t cond;$/;"	m	struct:__anon2
connect	jni.bak2/Socket.cpp	/^bool Socket::connect ( const char* host, const int port )$/;"	f	class:Socket
connect	jni.bak2/Socket.cpp	/^bool Socket::connect ( const std::string host, const int port )$/;"	f	class:Socket
correct_cmd_buff_pos	jni.bak/dislreagent.cpp	/^static void correct_cmd_buff_pos(buffer * cmd_buff, size_t shift) {$/;"	f	file:
create	jni.bak2/Socket.cpp	/^bool Socket::create()$/;"	f	class:Socket
create	jni/Socket.cpp	/^bool Socket::create()$/;"	f	class:Socket
create_analysis_msg	jni.bak/dislreagent.cpp	/^static size_t create_analysis_msg(buffer * buff, jlong id) {$/;"	f	file:
create_analysis_request_header	jni.bak/dislreagent.cpp	/^static size_t create_analysis_request_header ($/;"	f	file:
current_ordering_id	jni.bak2/ReProtocol.h	/^		long current_ordering_id;$/;"	m	class:ReProtocol
d	jni.bak/buffpack.h	/^	double d;$/;"	m	union:double_jlong
d	jni.bak2/buffpack.h	/^	double d;$/;"	m	union:double_jlong
d	jni/JniUtility.h	/^	double d;$/;"	m	union:double_jlong
d	jni/ReQueue.h	/^	double d;$/;"	m	union:double_jlong
d	jni/buffpack.h	/^	double d;$/;"	m	union:double_jlong
division	jni.bak/long.cpp	/^jfloat division(JNIEnv *env, jobject thiz, jint x, jint y){$/;"	f
division	jni.bak2/long.cpp	/^jfloat division(JNIEnv *env, jobject thiz, jint x, jint y){$/;"	f
division	jni/long.cpp	/^jfloat division(JNIEnv *env, jobject thiz, jint x, jint y){$/;"	f
division	src/com/inspur/test2/MainActivity.java	/^    public float division(int x, int y){$/;"	m	class:MainActivity
double_jlong	jni.bak/buffpack.h	/^union double_jlong {$/;"	u
double_jlong	jni.bak2/buffpack.h	/^union double_jlong {$/;"	u
double_jlong	jni/JniUtility.h	/^union double_jlong {$/;"	u
double_jlong	jni/ReQueue.h	/^union double_jlong {$/;"	u
double_jlong	jni/buffpack.h	/^union double_jlong {$/;"	u
empty_q	jni.bak/dislreagent.cpp	/^static blocking_queue empty_q;$/;"	v	file:
enter_critical_section	jni.bak/dislreagent.cpp	/^void enter_critical_section(pthread_mutex_t mutex){$/;"	f
env	jni.bak/long.cpp	/^	JNIEnv* env;$/;"	m	union:__anon6	file:
env	jni.bak2/ReAgent.cpp	/^	JNIEnv* env;$/;"	m	union:__anon9	file:
env	jni.bak2/long.cpp	/^	JNIEnv* env;$/;"	m	union:__anon10	file:
env	jni/ReAgent.cpp	/^	JNIEnv* env;$/;"	m	union:__anon7	file:
env	jni/long.cpp	/^	JNIEnv* env;$/;"	m	union:__anon8	file:
event_count	jni/ReQueue.h	/^		jint event_count; \/\/ count how many events accumulated$/;"	m	class:ReQueue
exit_critical_section	jni.bak/dislreagent.cpp	/^void exit_critical_section(pthread_mutex_t mutex){$/;"	f
f	jni.bak/buffpack.h	/^	float f;$/;"	m	union:float_jint
f	jni.bak2/buffpack.h	/^	float f;$/;"	m	union:float_jint
f	jni/JniUtility.h	/^	float f;$/;"	m	union:float_jint
f	jni/ReQueue.h	/^	float f;$/;"	m	union:float_jint
f	jni/buffpack.h	/^	float f;$/;"	m	union:float_jint
first	jni.bak/blockingqueue.h	/^	size_t first;$/;"	m	struct:__anon2
float_jint	jni.bak/buffpack.h	/^union float_jint {$/;"	u
float_jint	jni.bak2/buffpack.h	/^union float_jint {$/;"	u
float_jint	jni/JniUtility.h	/^union float_jint {$/;"	u
float_jint	jni/ReQueue.h	/^union float_jint {$/;"	u
float_jint	jni/buffpack.h	/^union float_jint {$/;"	u
getInt	src/com/inspur/test2/MainActivity.java	/^    private int getInt(Spinner s)$/;"	m	class:MainActivity	file:
get_bits	jni.bak/netref.h	/^static inline uint64_t get_bits(uint64_t from, uint64_t bit_mask,$/;"	f
get_bits	jni/Netref.h	/^static inline uint64_t get_bits(uint64_t from, uint64_t bit_mask,$/;"	f
get_jobject	jni.bak/netref.h	/^static jobject get_jobject(Object* obj){$/;"	f
get_net_reference	jni.bak/netref.h	/^jlong get_net_reference(JNIEnv * jni_env, Thread* self,$/;"	f
get_object	jni.bak/netref.h	/^Object* get_object(Thread* self, jobject obj){$/;"	f
get_tag	jni.bak/netref.h	/^jlong get_tag(Thread* self, jobject obj){$/;"	f
gl_mtx	jni.bak2/ReProtocol.h	/^		pthread_mutex_t gl_mtx;$/;"	m	class:ReProtocol
gl_mtx	jni/Lock.h	/^		pthread_mutex_t gl_mtx;$/;"	m	class:LockBuffer
gl_mtx	jni/Map.h	/^		pthread_mutex_t gl_mtx;$/;"	m	class:Map
gl_mtx	jni/ReAgent.cpp	/^pthread_mutex_t gl_mtx;$/;"	v
gl_mtx	jni/ReProtocol.h	/^		pthread_mutex_t gl_mtx;$/;"	m	class:ReProtocol
host_name	jni.bak/dislreagent.cpp	/^static char host_name[1024];$/;"	v	file:
htobe64	jni.bak/buffpack.h	11;"	d
htobe64	jni.bak/buffpack.h	9;"	d
htobe64	jni.bak2/buffpack.h	11;"	d
htobe64	jni.bak2/buffpack.h	9;"	d
htobe64	jni/JniUtility.h	11;"	d
htobe64	jni/JniUtility.h	9;"	d
htobe64	jni/buffpack.h	11;"	d
htobe64	jni/buffpack.h	9;"	d
i	jni.bak/buffpack.h	/^	jint i;$/;"	m	union:float_jint
i	jni.bak2/buffpack.h	/^	jint i;$/;"	m	union:float_jint
i	jni/JniUtility.h	/^	jint i;$/;"	m	union:float_jint
i	jni/ReQueue.h	/^	jint i;$/;"	m	union:float_jint
i	jni/buffpack.h	/^	jint i;$/;"	m	union:float_jint
id	jni.bak/dislreagent.cpp	/^	jlong id;$/;"	m	struct:tldata	file:
invocation_buf	jni/ReProtocol.h	/^		Map<ordering_id_type, Buffer*> invocation_buf;$/;"	m	class:ReProtocol
invocation_mtx	jni.bak2/ReProtocol.h	/^		map<long, pthread_mutex_t> invocation_mtx;$/;"	m	class:ReProtocol
is_valid	jni.bak2/Socket.h	/^  bool is_valid() const { return m_sock != -1; }$/;"	f	class:Socket
is_valid	jni/Socket.h	/^  bool is_valid() const { return m_sock != -1; }$/;"	f	class:Socket
java_vm	jni.bak/dislreagent.cpp	/^static JavaVM * java_vm;$/;"	v	file:
jvm_started	jni.bak/dislreagent.cpp	/^static int jvm_started = FALSE;$/;"	v	file:
l	jni.bak/buffpack.h	/^	jlong l;$/;"	m	union:double_jlong
l	jni.bak2/buffpack.h	/^	jlong l;$/;"	m	union:double_jlong
l	jni/JniUtility.h	/^	jlong l;$/;"	m	union:double_jlong
l	jni/ReQueue.h	/^	jlong l;$/;"	m	union:double_jlong
l	jni/buffpack.h	/^	jlong l;$/;"	m	union:double_jlong
listen	jni.bak2/Socket.cpp	/^bool Socket::listen() const$/;"	f	class:Socket
listen	jni/Socket.cpp	/^bool Socket::listen() const$/;"	f	class:Socket
local_mtx	jni.bak2/Common.h	/^		pthread_mutex_t *local_mtx;$/;"	m	class:ScopedMutex
local_mtx	jni/Common.h	/^		pthread_mutex_t *local_mtx;$/;"	m	class:ScopedMutex
local_pb	jni.bak/dislreagent.cpp	/^	process_buffs * local_pb;$/;"	m	struct:tldata	file:
lock_buf	jni/ReProtocol.h	/^		LockBuffer lock_buf;$/;"	m	class:ReProtocol
lock_id_type	jni/Common.h	/^typedef ordering_id_type lock_id_type;$/;"	t
long2jlong	jni.bak/utility.h	/^jlong long2jlong(long l){$/;"	f
m_addr	jni.bak2/Socket.h	/^  sockaddr_in m_addr;$/;"	m	class:Socket
m_addr	jni/Socket.h	/^  sockaddr_in m_addr;$/;"	m	class:Socket
m_sock	jni.bak2/Socket.h	/^  int m_sock;$/;"	m	class:Socket
m_sock	jni/Socket.h	/^  int m_sock;$/;"	m	class:Socket
main	jni/test.cpp	/^int main(){$/;"	f
manuallyClose	jni/ReAgent.cpp	/^void manuallyClose$/;"	f
manuallyClose	src/ch/usi/dag/dislre/REDispatch.java	/^	public static native void manuallyClose();$/;"	m	class:REDispatch
methodId	src/com/inspur/test2/MainActivity.java	/^	short methodId;$/;"	f	class:MainActivity
methodId2	src/com/inspur/test2/MainActivity.java	/^	short methodId2;$/;"	f	class:MainActivity
method_id	jni/ReAgent.cpp	/^static volatile jshort method_id = 1;$/;"	v	file:
methods	jni.bak/long.cpp	/^static JNINativeMethod methods[]= {$/;"	v	file:
methods	jni.bak2/ReAgent.cpp	/^static JNINativeMethod methods[]= {$/;"	v	file:
methods	jni.bak2/long.cpp	/^static JNINativeMethod methods[]= {$/;"	v	file:
methods	jni/ReAgent.cpp	/^static JNINativeMethod methods[]= {$/;"	v	file:
methods	jni/long.cpp	/^static JNINativeMethod methods[]= {$/;"	v	file:
multiplication	jni.bak/long.cpp	/^jfloat multiplication(JNIEnv *env, jobject thiz, jint x, jint y){$/;"	f
multiplication	jni.bak2/long.cpp	/^jfloat multiplication(JNIEnv *env, jobject thiz, jint x, jint y){$/;"	f
multiplication	jni/long.cpp	/^jfloat multiplication(JNIEnv *env, jobject thiz, jint x, jint y){$/;"	f
multiplication	src/com/inspur/test2/MainActivity.java	/^    public float multiplication(int x, int y){$/;"	m	class:MainActivity
mutex	jni.bak/blockingqueue.h	/^	pthread_mutex_t mutex;$/;"	m	struct:__anon2
myitoa	jni/Common.h	/^char *myitoa(int num,char *str,int radix)$/;"	f
net_ref_get_class_id	jni.bak/netref.h	/^inline jint net_ref_get_class_id(jlong net_ref) {$/;"	f
net_ref_get_class_id	jni/Netref.h	/^inline jint net_ref_get_class_id(jlong net_ref) {$/;"	f
net_ref_get_class_instance_bit	jni.bak/netref.h	/^inline unsigned char net_ref_get_class_instance_bit(jlong net_ref) {$/;"	f
net_ref_get_class_instance_bit	jni/Netref.h	/^inline unsigned char net_ref_get_class_instance_bit(jlong net_ref) {$/;"	f
net_ref_get_object_id	jni.bak/netref.h	/^inline jlong net_ref_get_object_id(jlong net_ref) {$/;"	f
net_ref_get_object_id	jni/Netref.h	/^inline jlong net_ref_get_object_id(jlong net_ref) {$/;"	f
net_ref_get_spec	jni.bak/netref.h	/^inline unsigned char net_ref_get_spec(jlong net_ref) {$/;"	f
net_ref_get_spec	jni/Netref.h	/^inline unsigned char net_ref_get_spec(jlong net_ref) {$/;"	f
net_ref_set_class_id	jni.bak/netref.h	/^inline void net_ref_set_class_id(jlong * net_ref, jint class_id) {$/;"	f
net_ref_set_class_id	jni/Netref.h	/^inline void net_ref_set_class_id(jlong * net_ref, jint class_id) {$/;"	f
net_ref_set_class_instance	jni.bak/netref.h	/^inline void net_ref_set_class_instance(jlong * net_ref, unsigned char cibit) {$/;"	f
net_ref_set_class_instance	jni/Netref.h	/^inline void net_ref_set_class_instance(jlong * net_ref, unsigned char cibit) {$/;"	f
net_ref_set_object_id	jni.bak/netref.h	/^inline void net_ref_set_object_id(jlong * net_ref, jlong object_id) {$/;"	f
net_ref_set_object_id	jni/Netref.h	/^inline void net_ref_set_object_id(jlong * net_ref, jlong object_id) {$/;"	f
net_ref_set_spec	jni.bak/netref.h	/^inline void net_ref_set_spec(jlong * net_ref, unsigned char spec) {$/;"	f
net_ref_set_spec	jni/Netref.h	/^inline void net_ref_set_spec(jlong * net_ref, unsigned char spec) {$/;"	f
newClass	jni/ReAgent.cpp	/^jlong newClass(ClassObject *obj){$/;"	f
next_analysis_id	jni.bak/dislreagent.cpp	/^static jshort next_analysis_id () {$/;"	f	file:
next_thread_id	jni.bak/dislreagent.cpp	/^static jlong next_thread_id () {$/;"	f	file:
no_sending_work	jni.bak/dislreagent.cpp	/^static volatile int no_sending_work = FALSE;$/;"	v	file:
no_tagging_work	jni.bak/dislreagent.cpp	/^static volatile int no_tagging_work = FALSE;$/;"	v	file:
objFreeHook	jni/ReAgent.cpp	/^void objFreeHook(Object* obj, Thread* self){$/;"	f
objNewHook	jni/ReAgent.cpp	/^void objNewHook(Object* obj){$/;"	f
obj_free_buff	jni.bak/dislreagent.cpp	/^static process_buffs * obj_free_buff = NULL;$/;"	v	file:
obj_free_event_count	jni.bak/dislreagent.cpp	/^static jint obj_free_event_count = 0;$/;"	v	file:
obj_free_event_count_pos	jni.bak/dislreagent.cpp	/^static size_t obj_free_event_count_pos = 0;$/;"	v	file:
obj_free_lock	jni.bak/dislreagent.cpp	/^static pthread_mutex_t obj_free_lock;$/;"	v	file:
obj_to_tag	jni.bak/dislreagent.cpp	/^	jobject obj_to_tag;$/;"	m	struct:__anon4	file:
obj_type	jni.bak/dislreagent.cpp	/^	unsigned char obj_type;$/;"	m	struct:__anon4	file:
objfree_mtx	jni.bak2/ReProtocol.h	/^		pthread_mutex_t objfree_mtx;$/;"	m	class:ReProtocol
objfree_mtx	jni/ReProtocol.h	/^		pthread_mutex_t objfree_mtx;$/;"	m	class:ReProtocol
objtag_q	jni.bak/dislreagent.cpp	/^static blocking_queue objtag_q;$/;"	v	file:
objtag_rec	jni.bak/dislreagent.cpp	/^} objtag_rec;$/;"	t	typeref:struct:__anon4	file:
objtag_thread	jni.bak/dislreagent.cpp	/^static pthread_t objtag_thread;$/;"	v	file:
objtag_thread_loop	jni.bak/dislreagent.cpp	/^static void * objtag_thread_loop(void * obj) {$/;"	f	file:
occupied	jni.bak/blockingqueue.h	/^	size_t occupied;$/;"	m	struct:__anon2
occupied	jni.bak/buffer.h	/^	size_t occupied;$/;"	m	struct:__anon1
onClick	src/com/inspur/test2/MainActivity.java	/^	public void onClick(View v) {$/;"	m	class:MainActivity
onCreate	src/com/inspur/test2/MainActivity.java	/^    public void onCreate(Bundle savedInstanceState) {$/;"	m	class:MainActivity
open_connection	jni.bak/dislreagent.cpp	/^static int open_connection() {$/;"	f	file:
operator []	jni/Map.h	/^		V& operator[](const K& key){$/;"	f	class:Map
ordering_id_type	jni/Common.h	/^typedef long ordering_id_type;$/;"	t
ot_class_id	jni/ReAgent.cpp	/^static volatile jint ot_class_id = 1;$/;"	v	file:
ot_object_id	jni/ReAgent.cpp	/^static volatile jlong ot_object_id = 1;$/;"	v	file:
ot_pack_aditional_data	jni.bak/dislreagent.cpp	/^static void ot_pack_aditional_data(JNIEnv * jni_env, jlong * net_ref,$/;"	f	file:
ot_pack_string_data	jni.bak/dislreagent.cpp	/^static void ot_pack_string_data(JNIEnv * jni_env, buffer * buff,$/;"	f	file:
ot_pack_thread_data	jni.bak/dislreagent.cpp	/^static void ot_pack_thread_data(JNIEnv * jni_env, buffer * buff,$/;"	f	file:
ot_relese_global_ref	jni.bak/dislreagent.cpp	/^static void ot_relese_global_ref(JNIEnv * jni_env, buffer * cmd_buff) {$/;"	f	file:
ot_tag_buff	jni.bak/dislreagent.cpp	/^static void ot_tag_buff(JNIEnv * jni_env, buffer * anl_buff, buffer * cmd_buff,$/;"	f	file:
ot_tag_record	jni.bak/dislreagent.cpp	/^static void ot_tag_record(JNIEnv * jni_env, buffer * buff, size_t buff_pos,$/;"	f	file:
owner_id	jni.bak/dislreagent.cpp	/^	jlong owner_id;$/;"	m	struct:__anon3	file:
pack_boolean	jni.bak/buffpack.h	/^void pack_boolean(buffer * buff, jboolean to_send) {$/;"	f
pack_boolean	jni.bak2/buffpack.h	/^void pack_boolean(buffer * buff, jboolean to_send) {$/;"	f
pack_boolean	jni/JniUtility.h	/^void pack_boolean(Buffer * buff, jboolean to_send) {$/;"	f
pack_boolean	jni/buffpack.h	/^void pack_boolean(buffer * buff, jboolean to_send) {$/;"	f
pack_byte	jni.bak/buffpack.h	/^void pack_byte(buffer * buff, jbyte to_send) {$/;"	f
pack_byte	jni.bak2/buffpack.h	/^void pack_byte(buffer * buff, jbyte to_send) {$/;"	f
pack_byte	jni/JniUtility.h	/^void pack_byte(Buffer * buff, jbyte to_send) {$/;"	f
pack_byte	jni/buffpack.h	/^void pack_byte(buffer * buff, jbyte to_send) {$/;"	f
pack_bytes	jni.bak/buffpack.h	/^void pack_bytes(buffer * buff, const void * data, jint size) {$/;"	f
pack_bytes	jni.bak2/buffpack.h	/^void pack_bytes(buffer * buff, const void * data, jint size) {$/;"	f
pack_bytes	jni/JniUtility.h	/^void pack_bytes(Buffer * buff, const void * data, jint size) {$/;"	f
pack_bytes	jni/buffpack.h	/^void pack_bytes(buffer * buff, const void * data, jint size) {$/;"	f
pack_char	jni.bak/buffpack.h	/^void pack_char(buffer * buff, jchar to_send) {$/;"	f
pack_char	jni.bak2/buffpack.h	/^void pack_char(buffer * buff, jchar to_send) {$/;"	f
pack_char	jni/JniUtility.h	/^void pack_char(Buffer * buff, jchar to_send) {$/;"	f
pack_char	jni/buffpack.h	/^void pack_char(buffer * buff, jchar to_send) {$/;"	f
pack_double	jni.bak/buffpack.h	/^void pack_double(buffer * buff, jdouble to_send) {$/;"	f
pack_double	jni.bak2/buffpack.h	/^void pack_double(buffer * buff, jdouble to_send) {$/;"	f
pack_double	jni/JniUtility.h	/^void pack_double(Buffer * buff, jdouble to_send) {$/;"	f
pack_double	jni/buffpack.h	/^void pack_double(buffer * buff, jdouble to_send) {$/;"	f
pack_float	jni.bak/buffpack.h	/^void pack_float(buffer * buff, jfloat to_send) {$/;"	f
pack_float	jni.bak2/buffpack.h	/^void pack_float(buffer * buff, jfloat to_send) {$/;"	f
pack_float	jni/JniUtility.h	/^void pack_float(Buffer * buff, jfloat to_send) {$/;"	f
pack_float	jni/buffpack.h	/^void pack_float(buffer * buff, jfloat to_send) {$/;"	f
pack_int	jni.bak/buffpack.h	/^void pack_int(buffer * buff, jint to_send) {$/;"	f
pack_int	jni.bak2/buffpack.h	/^void pack_int(buffer * buff, jint to_send) {$/;"	f
pack_int	jni/JniUtility.h	/^void pack_int(Buffer * buff, jint to_send) {$/;"	f
pack_int	jni/buffpack.h	/^void pack_int(buffer * buff, jint to_send) {$/;"	f
pack_long	jni.bak/buffpack.h	/^void pack_long(buffer * buff, jlong to_send) {$/;"	f
pack_long	jni.bak2/buffpack.h	/^void pack_long(buffer * buff, jlong to_send) {$/;"	f
pack_long	jni/JniUtility.h	/^void pack_long(Buffer * buff, jlong to_send) {$/;"	f
pack_long	jni/buffpack.h	/^void pack_long(buffer * buff, jlong to_send) {$/;"	f
pack_object	jni.bak/dislreagent.cpp	/^static void pack_object(JNIEnv * jni_env, buffer * buff, buffer * cmd_buff,$/;"	f	file:
pack_short	jni.bak/buffpack.h	/^void pack_short(buffer * buff, jshort to_send) {$/;"	f
pack_short	jni.bak2/buffpack.h	/^void pack_short(buffer * buff, jshort to_send) {$/;"	f
pack_short	jni/JniUtility.h	/^void pack_short(Buffer * buff, jshort to_send) {$/;"	f
pack_short	jni/buffpack.h	/^void pack_short(buffer * buff, jshort to_send) {$/;"	f
pack_string_utf8	jni.bak/buffpack.h	/^void pack_string_utf8(buffer * buff, const void * string_utf8,$/;"	f
pack_string_utf8	jni.bak2/buffpack.h	/^void pack_string_utf8(buffer * buff, const void * string_utf8,$/;"	f
pack_string_utf8	jni/JniUtility.h	/^void pack_string_utf8(Buffer * buff, const void * string_utf8,$/;"	f
pack_string_utf8	jni/buffpack.h	/^void pack_string_utf8(buffer * buff, const void * string_utf8,$/;"	f
parse_agent_options	jni.bak/dislreagent.cpp	/^static void parse_agent_options(char *options) {$/;"	f	file:
pb	jni.bak/dislreagent.cpp	/^	process_buffs * pb;$/;"	m	struct:__anon5	file:
pb	jni.bak/dislreagent.cpp	/^	process_buffs * pb;$/;"	m	struct:tldata	file:
pb_list	jni.bak/dislreagent.cpp	/^static process_buffs pb_list[BQ_BUFFERS + BQ_UTILITY];$/;"	v	file:
port_number	jni.bak/dislreagent.cpp	/^static char port_number[6]; \/\/ including final 0$/;"	v	file:
process_buffs	jni.bak/dislreagent.cpp	/^} process_buffs;$/;"	t	typeref:struct:__anon3	file:
q_capacity	jni.bak2/ReQueue.h	/^		int q_capacity;$/;"	m	class:ReQueue
q_capacity	jni/ReQueue.h	/^		int q_capacity;$/;"	m	class:BaseQueue
q_data	jni.bak2/ReQueue.h	/^		char* q_data;$/;"	m	class:ReQueue
q_data	jni/ReQueue.h	/^		char* q_data;$/;"	m	class:BaseQueue
q_invocation_map	jni.bak2/ReProtocol.h	/^map<orderingId, ReQueue> q_invocation_map;$/;"	v
q_objfree	jni.bak2/ReProtocol.h	/^ReQueue q_objfree;$/;"	v
q_objfree	jni/ReProtocol.h	/^		ReQueue q_objfree;$/;"	m	class:ReProtocol
q_occupied	jni.bak2/ReQueue.h	/^		int q_occupied;$/;"	m	class:ReQueue
q_occupied	jni/ReQueue.h	/^		int q_occupied;$/;"	m	class:BaseQueue
qa_element_size	jni.bak/blockingqueue.h	/^	size_t qa_element_size;$/;"	m	struct:__anon2
qa_size	jni.bak/blockingqueue.h	/^	size_t qa_size;$/;"	m	struct:__anon2
qarray	jni.bak/blockingqueue.h	/^	char * qarray;$/;"	m	struct:__anon2
rcv_data	jni.bak/comm.h	/^void rcv_data(int sockfd, void * data, int data_len) {$/;"	f
re_host	jni.bak2/ReProtocol.h	/^		char re_host[MAXHOSTNAME];$/;"	m	class:ReProtocol
re_host	jni/ReProtocol.h	/^		char re_host[MAXHOSTNAME];$/;"	m	class:ReProtocol
re_port	jni.bak2/ReProtocol.h	/^		int re_port;$/;"	m	class:ReProtocol
re_port	jni/ReProtocol.h	/^		int re_port;$/;"	m	class:ReProtocol
recv	jni.bak2/Socket.cpp	/^int Socket::recv ( std::string& s ) const$/;"	f	class:Socket
registerMethod	jni.bak2/ReAgent.cpp	/^jshort registerMethod$/;"	f
registerMethod	jni/ReAgent.cpp	/^jshort registerMethod$/;"	f
registerMethod	src/ch/usi/dag/dislre/REDispatch.java	/^	public static native short registerMethod(String analysisMethodDesc);$/;"	m	class:REDispatch
registerNativeMethods	jni.bak/long.cpp	/^static int registerNativeMethods(JNIEnv* env, const char* className,$/;"	f	file:
registerNativeMethods	jni.bak2/ReAgent.cpp	/^static int registerNativeMethods(JNIEnv* env, const char* className,$/;"	f	file:
registerNativeMethods	jni.bak2/long.cpp	/^static int registerNativeMethods(JNIEnv* env, const char* className,$/;"	f	file:
registerNativeMethods	jni/ReAgent.cpp	/^static int registerNativeMethods(JNIEnv* env, const char* className,$/;"	f	file:
registerNativeMethods	jni/long.cpp	/^static int registerNativeMethods(JNIEnv* env, const char* className,$/;"	f	file:
registerNatives	jni.bak/long.cpp	/^static int registerNatives(JNIEnv *env){$/;"	f	file:
registerNatives	jni.bak2/ReAgent.cpp	/^static int registerNatives(JNIEnv *env){$/;"	f	file:
registerNatives	jni.bak2/long.cpp	/^static int registerNatives(JNIEnv *env){$/;"	f	file:
registerNatives	jni/ReAgent.cpp	/^static int registerNatives(JNIEnv *env){$/;"	f	file:
registerNatives	jni/long.cpp	/^static int registerNatives(JNIEnv *env){$/;"	f	file:
register_method	jni.bak/dislreagent.cpp	/^static jshort register_method($/;"	f	file:
running_oid	jni/ReProtocol.h	/^		Map<thread_id_type, ordering_id_type> running_oid;$/;"	m	class:ReProtocol
self	jni.bak/blockingqueue.h	/^	Thread* self;$/;"	m	struct:__anon2
send	jni.bak2/Socket.cpp	/^bool Socket::send ( const char* s, int length ) const$/;"	f	class:Socket
send	jni.bak2/Socket.cpp	/^bool Socket::send ( const std::string s ) const$/;"	f	class:Socket
sendBoolean	jni.bak2/ReAgent.cpp	/^void sendBoolean$/;"	f
sendBoolean	jni/ReAgent.cpp	/^void sendBoolean$/;"	f
sendBoolean	src/ch/usi/dag/dislre/REDispatch.java	/^	public static native void sendBoolean(boolean booleanToSend);$/;"	m	class:REDispatch
sendByte	jni.bak2/ReAgent.cpp	/^void sendByte$/;"	f
sendByte	jni/ReAgent.cpp	/^void sendByte$/;"	f
sendByte	src/ch/usi/dag/dislre/REDispatch.java	/^	public static native void sendByte(byte byteToSend);$/;"	m	class:REDispatch
sendChar	jni.bak2/ReAgent.cpp	/^void sendChar$/;"	f
sendChar	jni/ReAgent.cpp	/^void sendChar$/;"	f
sendChar	src/ch/usi/dag/dislre/REDispatch.java	/^	public static native void sendChar(char charToSend);$/;"	m	class:REDispatch
sendDouble	jni.bak2/ReAgent.cpp	/^void sendDouble$/;"	f
sendDouble	jni/ReAgent.cpp	/^void sendDouble$/;"	f
sendDouble	src/ch/usi/dag/dislre/REDispatch.java	/^	public static native void sendDouble(double doubleToSend);$/;"	m	class:REDispatch
sendFloat	jni.bak2/ReAgent.cpp	/^void sendFloat$/;"	f
sendFloat	jni/ReAgent.cpp	/^void sendFloat$/;"	f
sendFloat	src/ch/usi/dag/dislre/REDispatch.java	/^	public static native void sendFloat(float floatToSend);$/;"	m	class:REDispatch
sendInt	jni.bak2/ReAgent.cpp	/^void sendInt$/;"	f
sendInt	jni/ReAgent.cpp	/^void sendInt$/;"	f
sendInt	src/ch/usi/dag/dislre/REDispatch.java	/^	public static native void sendInt(int intToSend);$/;"	m	class:REDispatch
sendLong	jni.bak2/ReAgent.cpp	/^void sendLong$/;"	f
sendLong	jni/ReAgent.cpp	/^void sendLong$/;"	f
sendLong	src/ch/usi/dag/dislre/REDispatch.java	/^	public static native void sendLong(long longToSend);$/;"	m	class:REDispatch
sendObject	jni.bak2/ReAgent.cpp	/^void sendObject$/;"	f
sendObject	jni/ReAgent.cpp	/^void sendObject$/;"	f
sendObject	src/ch/usi/dag/dislre/REDispatch.java	/^	public static native void sendObject(Object objToSend);$/;"	m	class:REDispatch
sendObjectPlusData	jni.bak2/ReAgent.cpp	/^void sendObjectPlusData$/;"	f
sendObjectPlusData	jni/ReAgent.cpp	/^void sendObjectPlusData$/;"	f
sendObjectPlusData	src/ch/usi/dag/dislre/REDispatch.java	/^	public static native void sendObjectPlusData(Object objToSend);$/;"	m	class:REDispatch
sendShort	jni.bak2/ReAgent.cpp	/^void sendShort$/;"	f
sendShort	jni/ReAgent.cpp	/^void sendShort$/;"	f
sendShort	src/ch/usi/dag/dislre/REDispatch.java	/^	public static native void sendShort(short shortToSend);$/;"	m	class:REDispatch
send_data	jni.bak/comm.h	/^void send_data(int sockfd, const void * data, int data_len) {$/;"	f
send_obj_free_buffer	jni.bak/dislreagent.cpp	/^static void send_obj_free_buffer() {$/;"	f	file:
send_q	jni.bak/dislreagent.cpp	/^static blocking_queue send_q;$/;"	v	file:
send_thread	jni.bak/dislreagent.cpp	/^static pthread_t send_thread;$/;"	v	file:
send_thread_buffers	jni.bak/dislreagent.cpp	/^static void send_thread_buffers(struct tldata * tld) {$/;"	f	file:
send_thread_loop	jni.bak/dislreagent.cpp	/^static void * send_thread_loop(void * obj) {$/;"	f	file:
set_bits	jni.bak/netref.h	/^static inline void set_bits(uint64_t * to, uint64_t bits,$/;"	f
set_bits	jni/Netref.h	/^static inline void set_bits(uint64_t * to, uint64_t bits,$/;"	f
set_non_blocking	jni.bak2/Socket.cpp	/^void Socket::set_non_blocking ( const bool b )$/;"	f	class:Socket
set_non_blocking	jni/Socket.cpp	/^void Socket::set_non_blocking ( const bool b )$/;"	f	class:Socket
set_tag	jni.bak/netref.h	/^static void set_tag(Thread* self, jobject obj, jlong tag){$/;"	f
sock	jni/ReProtocol.h	/^		Socket *sock;$/;"	m	class:ReProtocol
spinner1	src/com/inspur/test2/MainActivity.java	/^	Spinner spinner1, spinner2, spinner3;$/;"	f	class:MainActivity
spinner2	src/com/inspur/test2/MainActivity.java	/^	Spinner spinner1, spinner2, spinner3;$/;"	f	class:MainActivity
spinner3	src/com/inspur/test2/MainActivity.java	/^	Spinner spinner1, spinner2, spinner3;$/;"	f	class:MainActivity
substraction	jni.bak/long.cpp	/^jint substraction(JNIEnv *env, jobject thiz, jint x, jint y){$/;"	f
substraction	jni.bak2/long.cpp	/^jint substraction(JNIEnv *env, jobject thiz, jint x, jint y){$/;"	f
substraction	jni/long.cpp	/^jint substraction(JNIEnv *env, jobject thiz, jint x, jint y){$/;"	f
substraction	src/com/inspur/test2/MainActivity.java	/^    public int substraction(int x, int y){$/;"	m	class:MainActivity
ta2Id	src/ch/usi/dag/dislre/CodeExecutedRE.java	/^	private static short ta2Id = REDispatch.registerMethod($/;"	f	class:CodeExecutedRE	file:
taId	src/ch/usi/dag/dislre/CodeExecutedRE.java	/^	private static short taId = REDispatch.registerMethod($/;"	f	class:CodeExecutedRE	file:
tagging_lock	jni.bak/dislreagent.cpp	/^static pthread_mutex_t tagging_lock;$/;"	v	file:
tbId	src/ch/usi/dag/dislre/CodeExecutedRE.java	/^	private static short tbId = REDispatch.registerMethod($/;"	f	class:CodeExecutedRE	file:
test	src/ch/usi/dag/dislre/REDispatch.java	/^	public static void test(){$/;"	m	class:REDispatch
testingAdvanced	src/ch/usi/dag/dislre/CodeExecutedRE.java	/^	public static void testingAdvanced(String s, Object o, Class<?> c,$/;"	m	class:CodeExecutedRE
testingAdvanced2	src/ch/usi/dag/dislre/CodeExecutedRE.java	/^	public static void testingAdvanced2(Object o1, Object o2, Object o3,$/;"	m	class:CodeExecutedRE
testingBasic	src/ch/usi/dag/dislre/CodeExecutedRE.java	/^	public static void testingBasic(boolean b, byte by, char c, short s, int i,$/;"	m	class:CodeExecutedRE
testingNull	src/ch/usi/dag/dislre/CodeExecutedRE.java	/^	public static void testingNull(String s, Object o, Class<?> c) {$/;"	m	class:CodeExecutedRE
textView1	src/com/inspur/test2/MainActivity.java	/^	TextView textView1;$/;"	f	class:MainActivity
threadEndHook	jni/ReAgent.cpp	/^void threadEndHook(Thread* self){$/;"	f
thread_id_type	jni/Common.h	/^typedef int thread_id_type;$/;"	t
tld	jni.bak/dislreagent.cpp	/^static __thread struct tldata tld = {$/;"	v	typeref:struct:tldata	file:
tld_create	jni.bak/dislreagent.cpp	/^static struct tldata * tld_create ()  {$/;"	f	file:
tld_get	jni.bak/dislreagent.cpp	/^inline static struct tldata * tld_get () {$/;"	f	file:
tld_init	jni.bak/dislreagent.cpp	/^inline static struct tldata * tld_init (struct tldata * tld) {$/;"	f	file:
tldata	jni.bak/dislreagent.cpp	/^struct tldata {$/;"	s	file:
tls_init	jni.bak/dislreagent.cpp	/^static void tls_init () {$/;"	f	file:
tls_key	jni.bak/dislreagent.cpp	/^static pthread_key_t tls_key;$/;"	v	file:
tnId	src/ch/usi/dag/dislre/CodeExecutedRE.java	/^	private static short tnId = REDispatch.registerMethod($/;"	f	class:CodeExecutedRE	file:
to_buff_array	jni.bak/dislreagent.cpp	/^static to_buff_struct to_buff_array[TO_BUFFER_COUNT];$/;"	v	file:
to_buff_id	jni.bak/dislreagent.cpp	/^	jbyte to_buff_id;$/;"	m	struct:tldata	file:
to_buff_lock	jni.bak/dislreagent.cpp	/^static pthread_mutex_t to_buff_lock;$/;"	v	file:
to_buff_struct	jni.bak/dislreagent.cpp	/^} to_buff_struct;$/;"	t	typeref:struct:__anon5	file:
update_net_reference	jni.bak/netref.h	/^void update_net_reference(Thread * self, jobject obj, jlong net_ref) {$/;"	f
update_send_status	jni.bak/dislreagent.cpp	/^static void update_send_status(jobject to_send, jlong * net_ref) {$/;"	f	file:
utility_q	jni.bak/dislreagent.cpp	/^static blocking_queue utility_q;$/;"	v	file:
venv	jni.bak/long.cpp	/^	void* venv;$/;"	m	union:__anon6	file:
venv	jni.bak2/ReAgent.cpp	/^	void* venv;$/;"	m	union:__anon9	file:
venv	jni.bak2/long.cpp	/^	void* venv;$/;"	m	union:__anon10	file:
venv	jni/ReAgent.cpp	/^	void* venv;$/;"	m	union:__anon7	file:
venv	jni/long.cpp	/^	void* venv;$/;"	m	union:__anon8	file:
vmEndHook	jni/ReAgent.cpp	/^void vmEndHook(JavaVM* vm){$/;"	f
~BaseQueue	jni/ReQueue.h	/^		virtual ~BaseQueue(){$/;"	f	class:BaseQueue
~Buffer	jni/Buffer.h	/^		~Buffer(){$/;"	f	class:Buffer
~LockBuffer	jni/Lock.h	/^		~LockBuffer(){$/;"	f	class:LockBuffer
~Map	jni/Map.h	/^		~Map(){$/;"	f	class:Map
~ReProtocol	jni.bak2/ReProtocol.h	/^		~ReProtocol(){$/;"	f	class:ReProtocol
~ReProtocol	jni/ReProtocol.h	/^		~ReProtocol(){$/;"	f	class:ReProtocol
~ReQueue	jni.bak2/ReQueue.h	/^		~ReQueue(){$/;"	f	class:ReQueue
~ScopedMutex	jni.bak2/Common.h	/^		~ScopedMutex(){$/;"	f	class:ScopedMutex
~ScopedMutex	jni/Common.h	/^		~ScopedMutex(){$/;"	f	class:ScopedMutex
~Socket	jni.bak2/Socket.cpp	/^Socket::~Socket()$/;"	f	class:Socket
~Socket	jni/Socket.cpp	/^Socket::~Socket()$/;"	f	class:Socket
